import * as $protobuf from "protobufjs";
/** Namespace Common. */
export namespace Common {

    /** RetType enum. */
    enum RetType {
        RetType_Succeed = 0,
        RetType_Failed = -1,
        RetType_TimeOut = -100,
        RetType_Unknown = -400
    }

    /** PacketEncAlgo enum. */
    enum PacketEncAlgo {
        PacketEncAlgo_FTAES_ECB = 0,
        PacketEncAlgo_None = -1,
        PacketEncAlgo_AES_ECB = 1
    }

    /** Properties of a PacketID. */
    interface IPacketID {

        /** PacketID connID */
        connID: (number|Long);

        /** PacketID serialNo */
        serialNo: number;
    }

    /** Represents a PacketID. */
    class PacketID implements IPacketID {

        /**
         * Constructs a new PacketID.
         * @param [properties] Properties to set
         */
        constructor(properties?: Common.IPacketID);

        /** PacketID connID. */
        public connID: (number|Long);

        /** PacketID serialNo. */
        public serialNo: number;

        /**
         * Creates a new PacketID instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PacketID instance
         */
        public static create(properties?: Common.IPacketID): Common.PacketID;

        /**
         * Encodes the specified PacketID message. Does not implicitly {@link Common.PacketID.verify|verify} messages.
         * @param message PacketID message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Common.IPacketID, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PacketID message, length delimited. Does not implicitly {@link Common.PacketID.verify|verify} messages.
         * @param message PacketID message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Common.IPacketID, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PacketID message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PacketID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Common.PacketID;

        /**
         * Decodes a PacketID message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PacketID
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Common.PacketID;

        /**
         * Verifies a PacketID message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PacketID message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PacketID
         */
        public static fromObject(object: { [k: string]: any }): Common.PacketID;

        /**
         * Creates a plain object from a PacketID message. Also converts values to other types if specified.
         * @param message PacketID
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Common.PacketID, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PacketID to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace GetGlobalState. */
export namespace GetGlobalState {

    /** ProgramStatusType enum. */
    enum ProgramStatusType {
        ProgramStatusType_None = 0,
        ProgramStatusType_Loaded = 1,
        ProgramStatusType_Loging = 2,
        ProgramStatusType_NeedPicVerifyCode = 3,
        ProgramStatusType_NeedPhoneVerifyCode = 4,
        ProgramStatusType_LoginFailed = 5,
        ProgramStatusType_ForceUpdate = 6,
        ProgramStatusType_NessaryDataPreparing = 7,
        ProgramStatusType_NessaryDataMissing = 8,
        ProgramStatusType_UnAgreeDisclaimer = 9,
        ProgramStatusType_Ready = 10,
        ProgramStatusType_ForceLogout = 11
    }

    /** Properties of a ProgramStatus. */
    interface IProgramStatus {

        /** ProgramStatus type */
        type: GetGlobalState.ProgramStatusType;

        /** ProgramStatus strExtDesc */
        strExtDesc?: (string|null);
    }

    /** Represents a ProgramStatus. */
    class ProgramStatus implements IProgramStatus {

        /**
         * Constructs a new ProgramStatus.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetGlobalState.IProgramStatus);

        /** ProgramStatus type. */
        public type: GetGlobalState.ProgramStatusType;

        /** ProgramStatus strExtDesc. */
        public strExtDesc: string;

        /**
         * Creates a new ProgramStatus instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ProgramStatus instance
         */
        public static create(properties?: GetGlobalState.IProgramStatus): GetGlobalState.ProgramStatus;

        /**
         * Encodes the specified ProgramStatus message. Does not implicitly {@link GetGlobalState.ProgramStatus.verify|verify} messages.
         * @param message ProgramStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetGlobalState.IProgramStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ProgramStatus message, length delimited. Does not implicitly {@link GetGlobalState.ProgramStatus.verify|verify} messages.
         * @param message ProgramStatus message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetGlobalState.IProgramStatus, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ProgramStatus message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ProgramStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetGlobalState.ProgramStatus;

        /**
         * Decodes a ProgramStatus message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ProgramStatus
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetGlobalState.ProgramStatus;

        /**
         * Verifies a ProgramStatus message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ProgramStatus message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ProgramStatus
         */
        public static fromObject(object: { [k: string]: any }): GetGlobalState.ProgramStatus;

        /**
         * Creates a plain object from a ProgramStatus message. Also converts values to other types if specified.
         * @param message ProgramStatus
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetGlobalState.ProgramStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ProgramStatus to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S userID */
        userID: (number|Long);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetGlobalState.IC2S);

        /** C2S userID. */
        public userID: (number|Long);

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: GetGlobalState.IC2S): GetGlobalState.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link GetGlobalState.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetGlobalState.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link GetGlobalState.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetGlobalState.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetGlobalState.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetGlobalState.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): GetGlobalState.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetGlobalState.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C marketHK */
        marketHK: number;

        /** S2C marketUS */
        marketUS: number;

        /** S2C marketSH */
        marketSH: number;

        /** S2C marketSZ */
        marketSZ: number;

        /** S2C marketHKFuture */
        marketHKFuture: number;

        /** S2C qotLogined */
        qotLogined: boolean;

        /** S2C trdLogined */
        trdLogined: boolean;

        /** S2C serverVer */
        serverVer: number;

        /** S2C serverBuildNo */
        serverBuildNo: number;

        /** S2C time */
        time: (number|Long);

        /** S2C localTime */
        localTime?: (number|null);

        /** S2C programStatus */
        programStatus?: (GetGlobalState.IProgramStatus|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetGlobalState.IS2C);

        /** S2C marketHK. */
        public marketHK: number;

        /** S2C marketUS. */
        public marketUS: number;

        /** S2C marketSH. */
        public marketSH: number;

        /** S2C marketSZ. */
        public marketSZ: number;

        /** S2C marketHKFuture. */
        public marketHKFuture: number;

        /** S2C qotLogined. */
        public qotLogined: boolean;

        /** S2C trdLogined. */
        public trdLogined: boolean;

        /** S2C serverVer. */
        public serverVer: number;

        /** S2C serverBuildNo. */
        public serverBuildNo: number;

        /** S2C time. */
        public time: (number|Long);

        /** S2C localTime. */
        public localTime: number;

        /** S2C programStatus. */
        public programStatus?: (GetGlobalState.IProgramStatus|null);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: GetGlobalState.IS2C): GetGlobalState.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link GetGlobalState.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetGlobalState.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link GetGlobalState.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetGlobalState.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetGlobalState.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetGlobalState.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): GetGlobalState.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetGlobalState.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: GetGlobalState.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetGlobalState.IRequest);

        /** Request c2s. */
        public c2s: GetGlobalState.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: GetGlobalState.IRequest): GetGlobalState.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link GetGlobalState.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetGlobalState.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link GetGlobalState.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetGlobalState.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetGlobalState.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetGlobalState.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): GetGlobalState.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetGlobalState.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (GetGlobalState.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetGlobalState.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (GetGlobalState.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: GetGlobalState.IResponse): GetGlobalState.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link GetGlobalState.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetGlobalState.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link GetGlobalState.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetGlobalState.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetGlobalState.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetGlobalState.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): GetGlobalState.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetGlobalState.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_Common. */
export namespace Qot_Common {

    /** QotMarket enum. */
    enum QotMarket {
        QotMarket_Unknown = 0,
        QotMarket_HK_Security = 1,
        QotMarket_HK_Future = 2,
        QotMarket_US_Security = 11,
        QotMarket_CNSH_Security = 21,
        QotMarket_CNSZ_Security = 22
    }

    /** SecurityType enum. */
    enum SecurityType {
        SecurityType_Unknown = 0,
        SecurityType_Bond = 1,
        SecurityType_Bwrt = 2,
        SecurityType_Eqty = 3,
        SecurityType_Trust = 4,
        SecurityType_Warrant = 5,
        SecurityType_Index = 6,
        SecurityType_Plate = 7,
        SecurityType_Drvt = 8,
        SecurityType_PlateSet = 9
    }

    /** PlateSetType enum. */
    enum PlateSetType {
        PlateSetType_All = 0,
        PlateSetType_Industry = 1,
        PlateSetType_Region = 2,
        PlateSetType_Concept = 3,
        PlateSetType_Other = 4
    }

    /** WarrantType enum. */
    enum WarrantType {
        WarrantType_Unknown = 0,
        WarrantType_Buy = 1,
        WarrantType_Sell = 2,
        WarrantType_Bull = 3,
        WarrantType_Bear = 4
    }

    /** OptionType enum. */
    enum OptionType {
        OptionType_Unknown = 0,
        OptionType_Call = 1,
        OptionType_Put = 2
    }

    /** QotMarketState enum. */
    enum QotMarketState {
        QotMarketState_None = 0,
        QotMarketState_Auction = 1,
        QotMarketState_WaitingOpen = 2,
        QotMarketState_Morning = 3,
        QotMarketState_Rest = 4,
        QotMarketState_Afternoon = 5,
        QotMarketState_Closed = 6,
        QotMarketState_PreMarketBegin = 8,
        QotMarketState_PreMarketEnd = 9,
        QotMarketState_AfterHoursBegin = 10,
        QotMarketState_AfterHoursEnd = 11,
        QotMarketState_NightOpen = 13,
        QotMarketState_NightEnd = 14,
        QotMarketState_FutureDayOpen = 15,
        QotMarketState_FutureDayBreak = 16,
        QotMarketState_FutureDayClose = 17,
        QotMarketState_FutureDayWaitForOpen = 18,
        QotMarketState_HkCas = 19
    }

    /** TradeDateType enum. */
    enum TradeDateType {
        TradeDateType_Whole = 0,
        TradeDateType_Morning = 1,
        TradeDateType_Afternoon = 2
    }

    /** RehabType enum. */
    enum RehabType {
        RehabType_None = 0,
        RehabType_Forward = 1,
        RehabType_Backward = 2
    }

    /** KLType enum. */
    enum KLType {
        KLType_Unknown = 0,
        KLType_1Min = 1,
        KLType_Day = 2,
        KLType_Week = 3,
        KLType_Month = 4,
        KLType_Year = 5,
        KLType_5Min = 6,
        KLType_15Min = 7,
        KLType_30Min = 8,
        KLType_60Min = 9,
        KLType_3Min = 10,
        KLType_Quarter = 11
    }

    /** KLFields enum. */
    enum KLFields {
        KLFields_None = 0,
        KLFields_High = 1,
        KLFields_Open = 2,
        KLFields_Low = 4,
        KLFields_Close = 8,
        KLFields_LastClose = 16,
        KLFields_Volume = 32,
        KLFields_Turnover = 64,
        KLFields_TurnoverRate = 128,
        KLFields_PE = 256,
        KLFields_ChangeRate = 512
    }

    /** SubType enum. */
    enum SubType {
        SubType_None = 0,
        SubType_Basic = 1,
        SubType_OrderBook = 2,
        SubType_Ticker = 4,
        SubType_RT = 5,
        SubType_KL_Day = 6,
        SubType_KL_5Min = 7,
        SubType_KL_15Min = 8,
        SubType_KL_30Min = 9,
        SubType_KL_60Min = 10,
        SubType_KL_1Min = 11,
        SubType_KL_Week = 12,
        SubType_KL_Month = 13,
        SubType_Broker = 14,
        SubType_KL_Qurater = 15,
        SubType_KL_Year = 16,
        SubType_KL_3Min = 17,
        SubType_OrderDetail = 18
    }

    /** TickerDirection enum. */
    enum TickerDirection {
        TickerDirection_Unknown = 0,
        TickerDirection_Bid = 1,
        TickerDirection_Ask = 2,
        TickerDirection_Neutral = 3
    }

    /** TickerType enum. */
    enum TickerType {
        TickerType_Unknown = 0,
        TickerType_Automatch = 1,
        TickerType_Late = 2,
        TickerType_NoneAutomatch = 3,
        TickerType_InterAutomatch = 4,
        TickerType_InterNoneAutomatch = 5,
        TickerType_OddLot = 6,
        TickerType_Auction = 7,
        TickerType_Bulk = 8,
        TickerType_Crash = 9,
        TickerType_CrossMarket = 10,
        TickerType_BulkSold = 11,
        TickerType_FreeOnBoard = 12,
        TickerType_Rule127Or155 = 13,
        TickerType_Delay = 14,
        TickerType_MarketCenterClosePrice = 15,
        TickerType_NextDay = 16,
        TickerType_MarketCenterOpening = 17,
        TickerType_PriorReferencePrice = 18,
        TickerType_MarketCenterOpenPrice = 19,
        TickerType_Seller = 20,
        TickerType_T = 21,
        TickerType_ExtendedTradingHours = 22,
        TickerType_Contingent = 23,
        TickerType_AveragePrice = 24,
        TickerType_OTCSold = 25,
        TickerType_OddLotCrossMarket = 26,
        TickerType_DerivativelyPriced = 27,
        TickerType_ReOpeningPriced = 28,
        TickerType_ClosingPriced = 29,
        TickerType_ComprehensiveDelayPrice = 30
    }

    /** DarkStatus enum. */
    enum DarkStatus {
        DarkStatus_None = 0,
        DarkStatus_Trading = 1,
        DarkStatus_End = 2
    }

    /** HolderCategory enum. */
    enum HolderCategory {
        HolderCategory_Unknow = 0,
        HolderCategory_Agency = 1,
        HolderCategory_Fund = 2,
        HolderCategory_SeniorManager = 3
    }

    /** PushDataType enum. */
    enum PushDataType {
        PushDataType_Unknow = 0,
        PushDataType_Realtime = 1,
        PushDataType_ByDisConn = 2,
        PushDataType_Cache = 3
    }

    /** SortField enum. */
    enum SortField {
        SortField_Unknow = 0,
        SortField_Code = 1,
        SortField_CurPrice = 2,
        SortField_PriceChangeVal = 3,
        SortField_ChangeRate = 4,
        SortField_Status = 5,
        SortField_BidPrice = 6,
        SortField_AskPrice = 7,
        SortField_BidVol = 8,
        SortField_AskVol = 9,
        SortField_Volume = 10,
        SortField_Turnover = 11,
        SortField_Score = 12,
        SortField_Premium = 13,
        SortField_EffectiveLeverage = 14,
        SortField_Delta = 15,
        SortField_ImpliedVolatility = 16,
        SortField_Type = 17,
        SortField_StrikePrice = 18,
        SortField_BreakEvenPoint = 19,
        SortField_MaturityTime = 20,
        SortField_ListTime = 21,
        SortField_LastTradeTime = 22,
        SortField_Leverage = 23,
        SortField_InOutMoney = 24,
        SortField_RecoveryPrice = 25,
        SortField_ChangePrice = 26,
        SortField_Change = 27,
        SortField_StreetRate = 28,
        SortField_StreetVol = 29,
        SortField_Amplitude = 30,
        SortField_WarrantName = 31,
        SortField_Issuer = 32,
        SortField_LotSize = 33,
        SortField_IssueSize = 34
    }

    /** Issuer enum. */
    enum Issuer {
        Issuer_Unknow = 0,
        Issuer_SG = 1,
        Issuer_BP = 2,
        Issuer_CS = 3,
        Issuer_CT = 4,
        Issuer_EA = 5,
        Issuer_GS = 6,
        Issuer_HS = 7,
        Issuer_JP = 8,
        Issuer_MB = 9,
        Issuer_SC = 10,
        Issuer_UB = 11,
        Issuer_BI = 12,
        Issuer_DB = 13,
        Issuer_DC = 14,
        Issuer_ML = 15,
        Issuer_NM = 16,
        Issuer_RB = 17,
        Issuer_RS = 18,
        Issuer_BC = 19,
        Issuer_HT = 20,
        Issuer_VT = 21,
        Issuer_KC = 22
    }

    /** IpoPeriod enum. */
    enum IpoPeriod {
        IpoPeriod_Unknow = 0,
        IpoPeriod_Today = 1,
        IpoPeriod_Tomorrow = 2,
        IpoPeriod_Nextweek = 3,
        IpoPeriod_Lastweek = 4,
        IpoPeriod_Lastmonth = 5
    }

    /** PriceType enum. */
    enum PriceType {
        PriceType_Unknow = 0,
        PriceType_Outside = 1,
        PriceType_WithIn = 2
    }

    /** WarrantStatus enum. */
    enum WarrantStatus {
        WarrantStatus_Unknow = 0,
        WarrantStatus_Normal = 1,
        WarrantStatus_Suspend = 2,
        WarrantStatus_StopTrade = 3,
        WarrantStatus_PendingListing = 4
    }

    /** CompanyAct enum. */
    enum CompanyAct {
        CompanyAct_None = 0,
        CompanyAct_Split = 1,
        CompanyAct_Join = 2,
        CompanyAct_Bonus = 4,
        CompanyAct_Transfer = 8,
        CompanyAct_Allot = 16,
        CompanyAct_Add = 32,
        CompanyAct_Dividend = 64,
        CompanyAct_SPDividend = 128
    }

    /** Properties of a Security. */
    interface ISecurity {

        /** Security market */
        market: number;

        /** Security code */
        code: string;
    }

    /** Represents a Security. */
    class Security implements ISecurity {

        /**
         * Constructs a new Security.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ISecurity);

        /** Security market. */
        public market: number;

        /** Security code. */
        public code: string;

        /**
         * Creates a new Security instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Security instance
         */
        public static create(properties?: Qot_Common.ISecurity): Qot_Common.Security;

        /**
         * Encodes the specified Security message. Does not implicitly {@link Qot_Common.Security.verify|verify} messages.
         * @param message Security message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ISecurity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Security message, length delimited. Does not implicitly {@link Qot_Common.Security.verify|verify} messages.
         * @param message Security message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ISecurity, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Security message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Security
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.Security;

        /**
         * Decodes a Security message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Security
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.Security;

        /**
         * Verifies a Security message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Security message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Security
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.Security;

        /**
         * Creates a plain object from a Security message. Also converts values to other types if specified.
         * @param message Security
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.Security, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Security to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a KLine. */
    interface IKLine {

        /** KLine time */
        time: string;

        /** KLine isBlank */
        isBlank: boolean;

        /** KLine highPrice */
        highPrice?: (number|null);

        /** KLine openPrice */
        openPrice?: (number|null);

        /** KLine lowPrice */
        lowPrice?: (number|null);

        /** KLine closePrice */
        closePrice?: (number|null);

        /** KLine lastClosePrice */
        lastClosePrice?: (number|null);

        /** KLine volume */
        volume?: (number|Long|null);

        /** KLine turnover */
        turnover?: (number|null);

        /** KLine turnoverRate */
        turnoverRate?: (number|null);

        /** KLine pe */
        pe?: (number|null);

        /** KLine changeRate */
        changeRate?: (number|null);

        /** KLine timestamp */
        timestamp?: (number|null);
    }

    /** Represents a KLine. */
    class KLine implements IKLine {

        /**
         * Constructs a new KLine.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IKLine);

        /** KLine time. */
        public time: string;

        /** KLine isBlank. */
        public isBlank: boolean;

        /** KLine highPrice. */
        public highPrice: number;

        /** KLine openPrice. */
        public openPrice: number;

        /** KLine lowPrice. */
        public lowPrice: number;

        /** KLine closePrice. */
        public closePrice: number;

        /** KLine lastClosePrice. */
        public lastClosePrice: number;

        /** KLine volume. */
        public volume: (number|Long);

        /** KLine turnover. */
        public turnover: number;

        /** KLine turnoverRate. */
        public turnoverRate: number;

        /** KLine pe. */
        public pe: number;

        /** KLine changeRate. */
        public changeRate: number;

        /** KLine timestamp. */
        public timestamp: number;

        /**
         * Creates a new KLine instance using the specified properties.
         * @param [properties] Properties to set
         * @returns KLine instance
         */
        public static create(properties?: Qot_Common.IKLine): Qot_Common.KLine;

        /**
         * Encodes the specified KLine message. Does not implicitly {@link Qot_Common.KLine.verify|verify} messages.
         * @param message KLine message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IKLine, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified KLine message, length delimited. Does not implicitly {@link Qot_Common.KLine.verify|verify} messages.
         * @param message KLine message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IKLine, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a KLine message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns KLine
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.KLine;

        /**
         * Decodes a KLine message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns KLine
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.KLine;

        /**
         * Verifies a KLine message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a KLine message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns KLine
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.KLine;

        /**
         * Creates a plain object from a KLine message. Also converts values to other types if specified.
         * @param message KLine
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.KLine, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this KLine to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OptionBasicQotExData. */
    interface IOptionBasicQotExData {

        /** OptionBasicQotExData strikePrice */
        strikePrice: number;

        /** OptionBasicQotExData contractSize */
        contractSize: number;

        /** OptionBasicQotExData openInterest */
        openInterest: number;

        /** OptionBasicQotExData impliedVolatility */
        impliedVolatility: number;

        /** OptionBasicQotExData premium */
        premium: number;

        /** OptionBasicQotExData delta */
        delta: number;

        /** OptionBasicQotExData gamma */
        gamma: number;

        /** OptionBasicQotExData vega */
        vega: number;

        /** OptionBasicQotExData theta */
        theta: number;

        /** OptionBasicQotExData rho */
        rho: number;
    }

    /** Represents an OptionBasicQotExData. */
    class OptionBasicQotExData implements IOptionBasicQotExData {

        /**
         * Constructs a new OptionBasicQotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IOptionBasicQotExData);

        /** OptionBasicQotExData strikePrice. */
        public strikePrice: number;

        /** OptionBasicQotExData contractSize. */
        public contractSize: number;

        /** OptionBasicQotExData openInterest. */
        public openInterest: number;

        /** OptionBasicQotExData impliedVolatility. */
        public impliedVolatility: number;

        /** OptionBasicQotExData premium. */
        public premium: number;

        /** OptionBasicQotExData delta. */
        public delta: number;

        /** OptionBasicQotExData gamma. */
        public gamma: number;

        /** OptionBasicQotExData vega. */
        public vega: number;

        /** OptionBasicQotExData theta. */
        public theta: number;

        /** OptionBasicQotExData rho. */
        public rho: number;

        /**
         * Creates a new OptionBasicQotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionBasicQotExData instance
         */
        public static create(properties?: Qot_Common.IOptionBasicQotExData): Qot_Common.OptionBasicQotExData;

        /**
         * Encodes the specified OptionBasicQotExData message. Does not implicitly {@link Qot_Common.OptionBasicQotExData.verify|verify} messages.
         * @param message OptionBasicQotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IOptionBasicQotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionBasicQotExData message, length delimited. Does not implicitly {@link Qot_Common.OptionBasicQotExData.verify|verify} messages.
         * @param message OptionBasicQotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IOptionBasicQotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionBasicQotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionBasicQotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.OptionBasicQotExData;

        /**
         * Decodes an OptionBasicQotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionBasicQotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.OptionBasicQotExData;

        /**
         * Verifies an OptionBasicQotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionBasicQotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionBasicQotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.OptionBasicQotExData;

        /**
         * Creates a plain object from an OptionBasicQotExData message. Also converts values to other types if specified.
         * @param message OptionBasicQotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.OptionBasicQotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionBasicQotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a BasicQot. */
    interface IBasicQot {

        /** BasicQot security */
        security: Qot_Common.ISecurity;

        /** BasicQot isSuspended */
        isSuspended: boolean;

        /** BasicQot listTime */
        listTime: string;

        /** BasicQot priceSpread */
        priceSpread: number;

        /** BasicQot updateTime */
        updateTime: string;

        /** BasicQot highPrice */
        highPrice: number;

        /** BasicQot openPrice */
        openPrice: number;

        /** BasicQot lowPrice */
        lowPrice: number;

        /** BasicQot curPrice */
        curPrice: number;

        /** BasicQot lastClosePrice */
        lastClosePrice: number;

        /** BasicQot volume */
        volume: (number|Long);

        /** BasicQot turnover */
        turnover: number;

        /** BasicQot turnoverRate */
        turnoverRate: number;

        /** BasicQot amplitude */
        amplitude: number;

        /** BasicQot darkStatus */
        darkStatus?: (number|null);

        /** BasicQot listTimestamp */
        listTimestamp?: (number|null);

        /** BasicQot updateTimestamp */
        updateTimestamp?: (number|null);

        /** BasicQot optionExData */
        optionExData?: (Qot_Common.IOptionBasicQotExData|null);
    }

    /** Represents a BasicQot. */
    class BasicQot implements IBasicQot {

        /**
         * Constructs a new BasicQot.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IBasicQot);

        /** BasicQot security. */
        public security: Qot_Common.ISecurity;

        /** BasicQot isSuspended. */
        public isSuspended: boolean;

        /** BasicQot listTime. */
        public listTime: string;

        /** BasicQot priceSpread. */
        public priceSpread: number;

        /** BasicQot updateTime. */
        public updateTime: string;

        /** BasicQot highPrice. */
        public highPrice: number;

        /** BasicQot openPrice. */
        public openPrice: number;

        /** BasicQot lowPrice. */
        public lowPrice: number;

        /** BasicQot curPrice. */
        public curPrice: number;

        /** BasicQot lastClosePrice. */
        public lastClosePrice: number;

        /** BasicQot volume. */
        public volume: (number|Long);

        /** BasicQot turnover. */
        public turnover: number;

        /** BasicQot turnoverRate. */
        public turnoverRate: number;

        /** BasicQot amplitude. */
        public amplitude: number;

        /** BasicQot darkStatus. */
        public darkStatus: number;

        /** BasicQot listTimestamp. */
        public listTimestamp: number;

        /** BasicQot updateTimestamp. */
        public updateTimestamp: number;

        /** BasicQot optionExData. */
        public optionExData?: (Qot_Common.IOptionBasicQotExData|null);

        /**
         * Creates a new BasicQot instance using the specified properties.
         * @param [properties] Properties to set
         * @returns BasicQot instance
         */
        public static create(properties?: Qot_Common.IBasicQot): Qot_Common.BasicQot;

        /**
         * Encodes the specified BasicQot message. Does not implicitly {@link Qot_Common.BasicQot.verify|verify} messages.
         * @param message BasicQot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IBasicQot, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified BasicQot message, length delimited. Does not implicitly {@link Qot_Common.BasicQot.verify|verify} messages.
         * @param message BasicQot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IBasicQot, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a BasicQot message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns BasicQot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.BasicQot;

        /**
         * Decodes a BasicQot message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns BasicQot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.BasicQot;

        /**
         * Verifies a BasicQot message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a BasicQot message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns BasicQot
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.BasicQot;

        /**
         * Creates a plain object from a BasicQot message. Also converts values to other types if specified.
         * @param message BasicQot
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.BasicQot, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this BasicQot to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TimeShare. */
    interface ITimeShare {

        /** TimeShare time */
        time: string;

        /** TimeShare minute */
        minute: number;

        /** TimeShare isBlank */
        isBlank: boolean;

        /** TimeShare price */
        price?: (number|null);

        /** TimeShare lastClosePrice */
        lastClosePrice?: (number|null);

        /** TimeShare avgPrice */
        avgPrice?: (number|null);

        /** TimeShare volume */
        volume?: (number|Long|null);

        /** TimeShare turnover */
        turnover?: (number|null);

        /** TimeShare timestamp */
        timestamp?: (number|null);
    }

    /** Represents a TimeShare. */
    class TimeShare implements ITimeShare {

        /**
         * Constructs a new TimeShare.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ITimeShare);

        /** TimeShare time. */
        public time: string;

        /** TimeShare minute. */
        public minute: number;

        /** TimeShare isBlank. */
        public isBlank: boolean;

        /** TimeShare price. */
        public price: number;

        /** TimeShare lastClosePrice. */
        public lastClosePrice: number;

        /** TimeShare avgPrice. */
        public avgPrice: number;

        /** TimeShare volume. */
        public volume: (number|Long);

        /** TimeShare turnover. */
        public turnover: number;

        /** TimeShare timestamp. */
        public timestamp: number;

        /**
         * Creates a new TimeShare instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TimeShare instance
         */
        public static create(properties?: Qot_Common.ITimeShare): Qot_Common.TimeShare;

        /**
         * Encodes the specified TimeShare message. Does not implicitly {@link Qot_Common.TimeShare.verify|verify} messages.
         * @param message TimeShare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ITimeShare, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TimeShare message, length delimited. Does not implicitly {@link Qot_Common.TimeShare.verify|verify} messages.
         * @param message TimeShare message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ITimeShare, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TimeShare message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TimeShare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.TimeShare;

        /**
         * Decodes a TimeShare message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TimeShare
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.TimeShare;

        /**
         * Verifies a TimeShare message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TimeShare message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TimeShare
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.TimeShare;

        /**
         * Creates a plain object from a TimeShare message. Also converts values to other types if specified.
         * @param message TimeShare
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.TimeShare, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TimeShare to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityStaticBasic. */
    interface ISecurityStaticBasic {

        /** SecurityStaticBasic security */
        security: Qot_Common.ISecurity;

        /** SecurityStaticBasic id */
        id: (number|Long);

        /** SecurityStaticBasic lotSize */
        lotSize: number;

        /** SecurityStaticBasic secType */
        secType: number;

        /** SecurityStaticBasic name */
        name: string;

        /** SecurityStaticBasic listTime */
        listTime: string;

        /** SecurityStaticBasic delisting */
        delisting?: (boolean|null);

        /** SecurityStaticBasic listTimestamp */
        listTimestamp?: (number|null);
    }

    /** Represents a SecurityStaticBasic. */
    class SecurityStaticBasic implements ISecurityStaticBasic {

        /**
         * Constructs a new SecurityStaticBasic.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ISecurityStaticBasic);

        /** SecurityStaticBasic security. */
        public security: Qot_Common.ISecurity;

        /** SecurityStaticBasic id. */
        public id: (number|Long);

        /** SecurityStaticBasic lotSize. */
        public lotSize: number;

        /** SecurityStaticBasic secType. */
        public secType: number;

        /** SecurityStaticBasic name. */
        public name: string;

        /** SecurityStaticBasic listTime. */
        public listTime: string;

        /** SecurityStaticBasic delisting. */
        public delisting: boolean;

        /** SecurityStaticBasic listTimestamp. */
        public listTimestamp: number;

        /**
         * Creates a new SecurityStaticBasic instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityStaticBasic instance
         */
        public static create(properties?: Qot_Common.ISecurityStaticBasic): Qot_Common.SecurityStaticBasic;

        /**
         * Encodes the specified SecurityStaticBasic message. Does not implicitly {@link Qot_Common.SecurityStaticBasic.verify|verify} messages.
         * @param message SecurityStaticBasic message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ISecurityStaticBasic, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityStaticBasic message, length delimited. Does not implicitly {@link Qot_Common.SecurityStaticBasic.verify|verify} messages.
         * @param message SecurityStaticBasic message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ISecurityStaticBasic, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityStaticBasic message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityStaticBasic
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.SecurityStaticBasic;

        /**
         * Decodes a SecurityStaticBasic message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityStaticBasic
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.SecurityStaticBasic;

        /**
         * Verifies a SecurityStaticBasic message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityStaticBasic message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityStaticBasic
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.SecurityStaticBasic;

        /**
         * Creates a plain object from a SecurityStaticBasic message. Also converts values to other types if specified.
         * @param message SecurityStaticBasic
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.SecurityStaticBasic, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityStaticBasic to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarrantStaticExData. */
    interface IWarrantStaticExData {

        /** WarrantStaticExData type */
        type: number;

        /** WarrantStaticExData owner */
        owner: Qot_Common.ISecurity;
    }

    /** Represents a WarrantStaticExData. */
    class WarrantStaticExData implements IWarrantStaticExData {

        /**
         * Constructs a new WarrantStaticExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IWarrantStaticExData);

        /** WarrantStaticExData type. */
        public type: number;

        /** WarrantStaticExData owner. */
        public owner: Qot_Common.ISecurity;

        /**
         * Creates a new WarrantStaticExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarrantStaticExData instance
         */
        public static create(properties?: Qot_Common.IWarrantStaticExData): Qot_Common.WarrantStaticExData;

        /**
         * Encodes the specified WarrantStaticExData message. Does not implicitly {@link Qot_Common.WarrantStaticExData.verify|verify} messages.
         * @param message WarrantStaticExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IWarrantStaticExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WarrantStaticExData message, length delimited. Does not implicitly {@link Qot_Common.WarrantStaticExData.verify|verify} messages.
         * @param message WarrantStaticExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IWarrantStaticExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WarrantStaticExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarrantStaticExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.WarrantStaticExData;

        /**
         * Decodes a WarrantStaticExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarrantStaticExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.WarrantStaticExData;

        /**
         * Verifies a WarrantStaticExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarrantStaticExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarrantStaticExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.WarrantStaticExData;

        /**
         * Creates a plain object from a WarrantStaticExData message. Also converts values to other types if specified.
         * @param message WarrantStaticExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.WarrantStaticExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarrantStaticExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OptionStaticExData. */
    interface IOptionStaticExData {

        /** OptionStaticExData type */
        type: number;

        /** OptionStaticExData owner */
        owner: Qot_Common.ISecurity;

        /** OptionStaticExData strikeTime */
        strikeTime: string;

        /** OptionStaticExData strikePrice */
        strikePrice: number;

        /** OptionStaticExData suspend */
        suspend: boolean;

        /** OptionStaticExData market */
        market: string;

        /** OptionStaticExData strikeTimestamp */
        strikeTimestamp?: (number|null);
    }

    /** Represents an OptionStaticExData. */
    class OptionStaticExData implements IOptionStaticExData {

        /**
         * Constructs a new OptionStaticExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IOptionStaticExData);

        /** OptionStaticExData type. */
        public type: number;

        /** OptionStaticExData owner. */
        public owner: Qot_Common.ISecurity;

        /** OptionStaticExData strikeTime. */
        public strikeTime: string;

        /** OptionStaticExData strikePrice. */
        public strikePrice: number;

        /** OptionStaticExData suspend. */
        public suspend: boolean;

        /** OptionStaticExData market. */
        public market: string;

        /** OptionStaticExData strikeTimestamp. */
        public strikeTimestamp: number;

        /**
         * Creates a new OptionStaticExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionStaticExData instance
         */
        public static create(properties?: Qot_Common.IOptionStaticExData): Qot_Common.OptionStaticExData;

        /**
         * Encodes the specified OptionStaticExData message. Does not implicitly {@link Qot_Common.OptionStaticExData.verify|verify} messages.
         * @param message OptionStaticExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IOptionStaticExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionStaticExData message, length delimited. Does not implicitly {@link Qot_Common.OptionStaticExData.verify|verify} messages.
         * @param message OptionStaticExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IOptionStaticExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionStaticExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionStaticExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.OptionStaticExData;

        /**
         * Decodes an OptionStaticExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionStaticExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.OptionStaticExData;

        /**
         * Verifies an OptionStaticExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionStaticExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionStaticExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.OptionStaticExData;

        /**
         * Creates a plain object from an OptionStaticExData message. Also converts values to other types if specified.
         * @param message OptionStaticExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.OptionStaticExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionStaticExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityStaticInfo. */
    interface ISecurityStaticInfo {

        /** SecurityStaticInfo basic */
        basic: Qot_Common.ISecurityStaticBasic;

        /** SecurityStaticInfo warrantExData */
        warrantExData?: (Qot_Common.IWarrantStaticExData|null);

        /** SecurityStaticInfo optionExData */
        optionExData?: (Qot_Common.IOptionStaticExData|null);
    }

    /** Represents a SecurityStaticInfo. */
    class SecurityStaticInfo implements ISecurityStaticInfo {

        /**
         * Constructs a new SecurityStaticInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ISecurityStaticInfo);

        /** SecurityStaticInfo basic. */
        public basic: Qot_Common.ISecurityStaticBasic;

        /** SecurityStaticInfo warrantExData. */
        public warrantExData?: (Qot_Common.IWarrantStaticExData|null);

        /** SecurityStaticInfo optionExData. */
        public optionExData?: (Qot_Common.IOptionStaticExData|null);

        /**
         * Creates a new SecurityStaticInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityStaticInfo instance
         */
        public static create(properties?: Qot_Common.ISecurityStaticInfo): Qot_Common.SecurityStaticInfo;

        /**
         * Encodes the specified SecurityStaticInfo message. Does not implicitly {@link Qot_Common.SecurityStaticInfo.verify|verify} messages.
         * @param message SecurityStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ISecurityStaticInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityStaticInfo message, length delimited. Does not implicitly {@link Qot_Common.SecurityStaticInfo.verify|verify} messages.
         * @param message SecurityStaticInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ISecurityStaticInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityStaticInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.SecurityStaticInfo;

        /**
         * Decodes a SecurityStaticInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityStaticInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.SecurityStaticInfo;

        /**
         * Verifies a SecurityStaticInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityStaticInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityStaticInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.SecurityStaticInfo;

        /**
         * Creates a plain object from a SecurityStaticInfo message. Also converts values to other types if specified.
         * @param message SecurityStaticInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.SecurityStaticInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityStaticInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Broker. */
    interface IBroker {

        /** Broker id */
        id: (number|Long);

        /** Broker name */
        name: string;

        /** Broker pos */
        pos: number;
    }

    /** Represents a Broker. */
    class Broker implements IBroker {

        /**
         * Constructs a new Broker.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IBroker);

        /** Broker id. */
        public id: (number|Long);

        /** Broker name. */
        public name: string;

        /** Broker pos. */
        public pos: number;

        /**
         * Creates a new Broker instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Broker instance
         */
        public static create(properties?: Qot_Common.IBroker): Qot_Common.Broker;

        /**
         * Encodes the specified Broker message. Does not implicitly {@link Qot_Common.Broker.verify|verify} messages.
         * @param message Broker message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IBroker, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Broker message, length delimited. Does not implicitly {@link Qot_Common.Broker.verify|verify} messages.
         * @param message Broker message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IBroker, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Broker message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Broker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.Broker;

        /**
         * Decodes a Broker message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Broker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.Broker;

        /**
         * Verifies a Broker message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Broker message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Broker
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.Broker;

        /**
         * Creates a plain object from a Broker message. Also converts values to other types if specified.
         * @param message Broker
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.Broker, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Broker to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Ticker. */
    interface ITicker {

        /** Ticker time */
        time: string;

        /** Ticker sequence */
        sequence: (number|Long);

        /** Ticker dir */
        dir: number;

        /** Ticker price */
        price: number;

        /** Ticker volume */
        volume: (number|Long);

        /** Ticker turnover */
        turnover: number;

        /** Ticker recvTime */
        recvTime?: (number|null);

        /** Ticker type */
        type?: (number|null);

        /** Ticker typeSign */
        typeSign?: (number|null);

        /** Ticker pushDataType */
        pushDataType?: (number|null);

        /** Ticker timestamp */
        timestamp?: (number|null);
    }

    /** Represents a Ticker. */
    class Ticker implements ITicker {

        /**
         * Constructs a new Ticker.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ITicker);

        /** Ticker time. */
        public time: string;

        /** Ticker sequence. */
        public sequence: (number|Long);

        /** Ticker dir. */
        public dir: number;

        /** Ticker price. */
        public price: number;

        /** Ticker volume. */
        public volume: (number|Long);

        /** Ticker turnover. */
        public turnover: number;

        /** Ticker recvTime. */
        public recvTime: number;

        /** Ticker type. */
        public type: number;

        /** Ticker typeSign. */
        public typeSign: number;

        /** Ticker pushDataType. */
        public pushDataType: number;

        /** Ticker timestamp. */
        public timestamp: number;

        /**
         * Creates a new Ticker instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Ticker instance
         */
        public static create(properties?: Qot_Common.ITicker): Qot_Common.Ticker;

        /**
         * Encodes the specified Ticker message. Does not implicitly {@link Qot_Common.Ticker.verify|verify} messages.
         * @param message Ticker message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ITicker, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Ticker message, length delimited. Does not implicitly {@link Qot_Common.Ticker.verify|verify} messages.
         * @param message Ticker message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ITicker, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Ticker message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Ticker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.Ticker;

        /**
         * Decodes a Ticker message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Ticker
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.Ticker;

        /**
         * Verifies a Ticker message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Ticker message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Ticker
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.Ticker;

        /**
         * Creates a plain object from a Ticker message. Also converts values to other types if specified.
         * @param message Ticker
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.Ticker, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Ticker to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrderBook. */
    interface IOrderBook {

        /** OrderBook price */
        price: number;

        /** OrderBook volume */
        volume: (number|Long);

        /** OrderBook orederCount */
        orederCount: number;
    }

    /** Represents an OrderBook. */
    class OrderBook implements IOrderBook {

        /**
         * Constructs a new OrderBook.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IOrderBook);

        /** OrderBook price. */
        public price: number;

        /** OrderBook volume. */
        public volume: (number|Long);

        /** OrderBook orederCount. */
        public orederCount: number;

        /**
         * Creates a new OrderBook instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderBook instance
         */
        public static create(properties?: Qot_Common.IOrderBook): Qot_Common.OrderBook;

        /**
         * Encodes the specified OrderBook message. Does not implicitly {@link Qot_Common.OrderBook.verify|verify} messages.
         * @param message OrderBook message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IOrderBook, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderBook message, length delimited. Does not implicitly {@link Qot_Common.OrderBook.verify|verify} messages.
         * @param message OrderBook message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IOrderBook, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderBook message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderBook
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.OrderBook;

        /**
         * Decodes an OrderBook message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderBook
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.OrderBook;

        /**
         * Verifies an OrderBook message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderBook message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderBook
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.OrderBook;

        /**
         * Creates a plain object from an OrderBook message. Also converts values to other types if specified.
         * @param message OrderBook
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.OrderBook, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderBook to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrderDetail. */
    interface IOrderDetail {

        /** OrderDetail orderCount */
        orderCount: number;

        /** OrderDetail orderVol */
        orderVol?: (number[]|null);
    }

    /** Represents an OrderDetail. */
    class OrderDetail implements IOrderDetail {

        /**
         * Constructs a new OrderDetail.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IOrderDetail);

        /** OrderDetail orderCount. */
        public orderCount: number;

        /** OrderDetail orderVol. */
        public orderVol: number[];

        /**
         * Creates a new OrderDetail instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderDetail instance
         */
        public static create(properties?: Qot_Common.IOrderDetail): Qot_Common.OrderDetail;

        /**
         * Encodes the specified OrderDetail message. Does not implicitly {@link Qot_Common.OrderDetail.verify|verify} messages.
         * @param message OrderDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IOrderDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderDetail message, length delimited. Does not implicitly {@link Qot_Common.OrderDetail.verify|verify} messages.
         * @param message OrderDetail message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IOrderDetail, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderDetail message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.OrderDetail;

        /**
         * Decodes an OrderDetail message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderDetail
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.OrderDetail;

        /**
         * Verifies an OrderDetail message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderDetail message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderDetail
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.OrderDetail;

        /**
         * Creates a plain object from an OrderDetail message. Also converts values to other types if specified.
         * @param message OrderDetail
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.OrderDetail, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderDetail to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ShareHoldingChange. */
    interface IShareHoldingChange {

        /** ShareHoldingChange holderName */
        holderName: string;

        /** ShareHoldingChange holdingQty */
        holdingQty: number;

        /** ShareHoldingChange holdingRatio */
        holdingRatio: number;

        /** ShareHoldingChange changeQty */
        changeQty: number;

        /** ShareHoldingChange changeRatio */
        changeRatio: number;

        /** ShareHoldingChange time */
        time: string;

        /** ShareHoldingChange timestamp */
        timestamp?: (number|null);
    }

    /** Represents a ShareHoldingChange. */
    class ShareHoldingChange implements IShareHoldingChange {

        /**
         * Constructs a new ShareHoldingChange.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IShareHoldingChange);

        /** ShareHoldingChange holderName. */
        public holderName: string;

        /** ShareHoldingChange holdingQty. */
        public holdingQty: number;

        /** ShareHoldingChange holdingRatio. */
        public holdingRatio: number;

        /** ShareHoldingChange changeQty. */
        public changeQty: number;

        /** ShareHoldingChange changeRatio. */
        public changeRatio: number;

        /** ShareHoldingChange time. */
        public time: string;

        /** ShareHoldingChange timestamp. */
        public timestamp: number;

        /**
         * Creates a new ShareHoldingChange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ShareHoldingChange instance
         */
        public static create(properties?: Qot_Common.IShareHoldingChange): Qot_Common.ShareHoldingChange;

        /**
         * Encodes the specified ShareHoldingChange message. Does not implicitly {@link Qot_Common.ShareHoldingChange.verify|verify} messages.
         * @param message ShareHoldingChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IShareHoldingChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ShareHoldingChange message, length delimited. Does not implicitly {@link Qot_Common.ShareHoldingChange.verify|verify} messages.
         * @param message ShareHoldingChange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IShareHoldingChange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ShareHoldingChange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ShareHoldingChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.ShareHoldingChange;

        /**
         * Decodes a ShareHoldingChange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ShareHoldingChange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.ShareHoldingChange;

        /**
         * Verifies a ShareHoldingChange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ShareHoldingChange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ShareHoldingChange
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.ShareHoldingChange;

        /**
         * Creates a plain object from a ShareHoldingChange message. Also converts values to other types if specified.
         * @param message ShareHoldingChange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.ShareHoldingChange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ShareHoldingChange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SubInfo. */
    interface ISubInfo {

        /** SubInfo subType */
        subType: number;

        /** SubInfo securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a SubInfo. */
    class SubInfo implements ISubInfo {

        /**
         * Constructs a new SubInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.ISubInfo);

        /** SubInfo subType. */
        public subType: number;

        /** SubInfo securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new SubInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SubInfo instance
         */
        public static create(properties?: Qot_Common.ISubInfo): Qot_Common.SubInfo;

        /**
         * Encodes the specified SubInfo message. Does not implicitly {@link Qot_Common.SubInfo.verify|verify} messages.
         * @param message SubInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.ISubInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SubInfo message, length delimited. Does not implicitly {@link Qot_Common.SubInfo.verify|verify} messages.
         * @param message SubInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.ISubInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SubInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SubInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.SubInfo;

        /**
         * Decodes a SubInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SubInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.SubInfo;

        /**
         * Verifies a SubInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SubInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SubInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.SubInfo;

        /**
         * Creates a plain object from a SubInfo message. Also converts values to other types if specified.
         * @param message SubInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.SubInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SubInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a ConnSubInfo. */
    interface IConnSubInfo {

        /** ConnSubInfo subInfoList */
        subInfoList?: (Qot_Common.ISubInfo[]|null);

        /** ConnSubInfo usedQuota */
        usedQuota: number;

        /** ConnSubInfo isOwnConnData */
        isOwnConnData: boolean;
    }

    /** Represents a ConnSubInfo. */
    class ConnSubInfo implements IConnSubInfo {

        /**
         * Constructs a new ConnSubInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IConnSubInfo);

        /** ConnSubInfo subInfoList. */
        public subInfoList: Qot_Common.ISubInfo[];

        /** ConnSubInfo usedQuota. */
        public usedQuota: number;

        /** ConnSubInfo isOwnConnData. */
        public isOwnConnData: boolean;

        /**
         * Creates a new ConnSubInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConnSubInfo instance
         */
        public static create(properties?: Qot_Common.IConnSubInfo): Qot_Common.ConnSubInfo;

        /**
         * Encodes the specified ConnSubInfo message. Does not implicitly {@link Qot_Common.ConnSubInfo.verify|verify} messages.
         * @param message ConnSubInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IConnSubInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConnSubInfo message, length delimited. Does not implicitly {@link Qot_Common.ConnSubInfo.verify|verify} messages.
         * @param message ConnSubInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IConnSubInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConnSubInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConnSubInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.ConnSubInfo;

        /**
         * Decodes a ConnSubInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConnSubInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.ConnSubInfo;

        /**
         * Verifies a ConnSubInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConnSubInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConnSubInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.ConnSubInfo;

        /**
         * Creates a plain object from a ConnSubInfo message. Also converts values to other types if specified.
         * @param message ConnSubInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.ConnSubInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConnSubInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a PlateInfo. */
    interface IPlateInfo {

        /** PlateInfo plate */
        plate: Qot_Common.ISecurity;

        /** PlateInfo name */
        name: string;

        /** PlateInfo plateType */
        plateType?: (number|null);
    }

    /** Represents a PlateInfo. */
    class PlateInfo implements IPlateInfo {

        /**
         * Constructs a new PlateInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IPlateInfo);

        /** PlateInfo plate. */
        public plate: Qot_Common.ISecurity;

        /** PlateInfo name. */
        public name: string;

        /** PlateInfo plateType. */
        public plateType: number;

        /**
         * Creates a new PlateInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PlateInfo instance
         */
        public static create(properties?: Qot_Common.IPlateInfo): Qot_Common.PlateInfo;

        /**
         * Encodes the specified PlateInfo message. Does not implicitly {@link Qot_Common.PlateInfo.verify|verify} messages.
         * @param message PlateInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IPlateInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PlateInfo message, length delimited. Does not implicitly {@link Qot_Common.PlateInfo.verify|verify} messages.
         * @param message PlateInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IPlateInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PlateInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PlateInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.PlateInfo;

        /**
         * Decodes a PlateInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PlateInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.PlateInfo;

        /**
         * Verifies a PlateInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PlateInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PlateInfo
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.PlateInfo;

        /**
         * Creates a plain object from a PlateInfo message. Also converts values to other types if specified.
         * @param message PlateInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.PlateInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PlateInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Rehab. */
    interface IRehab {

        /** Rehab time */
        time: string;

        /** Rehab companyActFlag */
        companyActFlag: (number|Long);

        /** Rehab fwdFactorA */
        fwdFactorA: number;

        /** Rehab fwdFactorB */
        fwdFactorB: number;

        /** Rehab bwdFactorA */
        bwdFactorA: number;

        /** Rehab bwdFactorB */
        bwdFactorB: number;

        /** Rehab splitBase */
        splitBase?: (number|null);

        /** Rehab splitErt */
        splitErt?: (number|null);

        /** Rehab joinBase */
        joinBase?: (number|null);

        /** Rehab joinErt */
        joinErt?: (number|null);

        /** Rehab bonusBase */
        bonusBase?: (number|null);

        /** Rehab bonusErt */
        bonusErt?: (number|null);

        /** Rehab transferBase */
        transferBase?: (number|null);

        /** Rehab transferErt */
        transferErt?: (number|null);

        /** Rehab allotBase */
        allotBase?: (number|null);

        /** Rehab allotErt */
        allotErt?: (number|null);

        /** Rehab allotPrice */
        allotPrice?: (number|null);

        /** Rehab addBase */
        addBase?: (number|null);

        /** Rehab addErt */
        addErt?: (number|null);

        /** Rehab addPrice */
        addPrice?: (number|null);

        /** Rehab dividend */
        dividend?: (number|null);

        /** Rehab spDividend */
        spDividend?: (number|null);

        /** Rehab timestamp */
        timestamp?: (number|null);
    }

    /** Represents a Rehab. */
    class Rehab implements IRehab {

        /**
         * Constructs a new Rehab.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Common.IRehab);

        /** Rehab time. */
        public time: string;

        /** Rehab companyActFlag. */
        public companyActFlag: (number|Long);

        /** Rehab fwdFactorA. */
        public fwdFactorA: number;

        /** Rehab fwdFactorB. */
        public fwdFactorB: number;

        /** Rehab bwdFactorA. */
        public bwdFactorA: number;

        /** Rehab bwdFactorB. */
        public bwdFactorB: number;

        /** Rehab splitBase. */
        public splitBase: number;

        /** Rehab splitErt. */
        public splitErt: number;

        /** Rehab joinBase. */
        public joinBase: number;

        /** Rehab joinErt. */
        public joinErt: number;

        /** Rehab bonusBase. */
        public bonusBase: number;

        /** Rehab bonusErt. */
        public bonusErt: number;

        /** Rehab transferBase. */
        public transferBase: number;

        /** Rehab transferErt. */
        public transferErt: number;

        /** Rehab allotBase. */
        public allotBase: number;

        /** Rehab allotErt. */
        public allotErt: number;

        /** Rehab allotPrice. */
        public allotPrice: number;

        /** Rehab addBase. */
        public addBase: number;

        /** Rehab addErt. */
        public addErt: number;

        /** Rehab addPrice. */
        public addPrice: number;

        /** Rehab dividend. */
        public dividend: number;

        /** Rehab spDividend. */
        public spDividend: number;

        /** Rehab timestamp. */
        public timestamp: number;

        /**
         * Creates a new Rehab instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Rehab instance
         */
        public static create(properties?: Qot_Common.IRehab): Qot_Common.Rehab;

        /**
         * Encodes the specified Rehab message. Does not implicitly {@link Qot_Common.Rehab.verify|verify} messages.
         * @param message Rehab message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Common.IRehab, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Rehab message, length delimited. Does not implicitly {@link Qot_Common.Rehab.verify|verify} messages.
         * @param message Rehab message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Common.IRehab, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Rehab message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Rehab
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Common.Rehab;

        /**
         * Decodes a Rehab message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Rehab
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Common.Rehab;

        /**
         * Verifies a Rehab message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Rehab message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Rehab
         */
        public static fromObject(object: { [k: string]: any }): Qot_Common.Rehab;

        /**
         * Creates a plain object from a Rehab message. Also converts values to other types if specified.
         * @param message Rehab
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Common.Rehab, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Rehab to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace GetUserInfo. */
export namespace GetUserInfo {

    /** QotRight enum. */
    enum QotRight {
        QotRight_Unknow = 0,
        QotRight_Bmp = 1,
        QotRight_Level1 = 2,
        QotRight_Level2 = 3
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S userID */
        userID: (number|Long);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetUserInfo.IC2S);

        /** C2S userID. */
        public userID: (number|Long);

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: GetUserInfo.IC2S): GetUserInfo.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link GetUserInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetUserInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link GetUserInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetUserInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetUserInfo.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetUserInfo.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): GetUserInfo.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetUserInfo.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C nickName */
        nickName: string;

        /** S2C avatarUrl */
        avatarUrl: string;

        /** S2C apiLevel */
        apiLevel: string;

        /** S2C hkQotRight */
        hkQotRight: number;

        /** S2C usQotRight */
        usQotRight: number;

        /** S2C cnQotRight */
        cnQotRight: number;

        /** S2C isNeedAgreeDisclaimer */
        isNeedAgreeDisclaimer: boolean;

        /** S2C userID */
        userID: (number|Long);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetUserInfo.IS2C);

        /** S2C nickName. */
        public nickName: string;

        /** S2C avatarUrl. */
        public avatarUrl: string;

        /** S2C apiLevel. */
        public apiLevel: string;

        /** S2C hkQotRight. */
        public hkQotRight: number;

        /** S2C usQotRight. */
        public usQotRight: number;

        /** S2C cnQotRight. */
        public cnQotRight: number;

        /** S2C isNeedAgreeDisclaimer. */
        public isNeedAgreeDisclaimer: boolean;

        /** S2C userID. */
        public userID: (number|Long);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: GetUserInfo.IS2C): GetUserInfo.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link GetUserInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetUserInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link GetUserInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetUserInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetUserInfo.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetUserInfo.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): GetUserInfo.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetUserInfo.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: GetUserInfo.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetUserInfo.IRequest);

        /** Request c2s. */
        public c2s: GetUserInfo.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: GetUserInfo.IRequest): GetUserInfo.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link GetUserInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetUserInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link GetUserInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetUserInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetUserInfo.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetUserInfo.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): GetUserInfo.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetUserInfo.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (GetUserInfo.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: GetUserInfo.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (GetUserInfo.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: GetUserInfo.IResponse): GetUserInfo.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link GetUserInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: GetUserInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link GetUserInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: GetUserInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): GetUserInfo.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): GetUserInfo.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): GetUserInfo.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: GetUserInfo.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace InitConnect. */
export namespace InitConnect {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S clientVer */
        clientVer: number;

        /** C2S clientID */
        clientID: string;

        /** C2S recvNotify */
        recvNotify?: (boolean|null);

        /** C2S packetEncAlgo */
        packetEncAlgo?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitConnect.IC2S);

        /** C2S clientVer. */
        public clientVer: number;

        /** C2S clientID. */
        public clientID: string;

        /** C2S recvNotify. */
        public recvNotify: boolean;

        /** C2S packetEncAlgo. */
        public packetEncAlgo: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: InitConnect.IC2S): InitConnect.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link InitConnect.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitConnect.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link InitConnect.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitConnect.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitConnect.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitConnect.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): InitConnect.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitConnect.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C serverVer */
        serverVer: number;

        /** S2C loginUserID */
        loginUserID: (number|Long);

        /** S2C connID */
        connID: (number|Long);

        /** S2C connAESKey */
        connAESKey: string;

        /** S2C keepAliveInterval */
        keepAliveInterval: number;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitConnect.IS2C);

        /** S2C serverVer. */
        public serverVer: number;

        /** S2C loginUserID. */
        public loginUserID: (number|Long);

        /** S2C connID. */
        public connID: (number|Long);

        /** S2C connAESKey. */
        public connAESKey: string;

        /** S2C keepAliveInterval. */
        public keepAliveInterval: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: InitConnect.IS2C): InitConnect.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link InitConnect.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitConnect.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link InitConnect.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitConnect.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitConnect.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitConnect.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): InitConnect.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitConnect.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: InitConnect.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitConnect.IRequest);

        /** Request c2s. */
        public c2s: InitConnect.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: InitConnect.IRequest): InitConnect.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link InitConnect.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitConnect.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link InitConnect.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitConnect.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitConnect.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitConnect.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): InitConnect.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitConnect.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (InitConnect.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: InitConnect.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (InitConnect.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: InitConnect.IResponse): InitConnect.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link InitConnect.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: InitConnect.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link InitConnect.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: InitConnect.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InitConnect.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InitConnect.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): InitConnect.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: InitConnect.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace KeepAlive. */
export namespace KeepAlive {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S time */
        time: (number|Long);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: KeepAlive.IC2S);

        /** C2S time. */
        public time: (number|Long);

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: KeepAlive.IC2S): KeepAlive.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link KeepAlive.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: KeepAlive.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link KeepAlive.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: KeepAlive.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): KeepAlive.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): KeepAlive.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): KeepAlive.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: KeepAlive.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C time */
        time: (number|Long);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: KeepAlive.IS2C);

        /** S2C time. */
        public time: (number|Long);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: KeepAlive.IS2C): KeepAlive.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link KeepAlive.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: KeepAlive.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link KeepAlive.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: KeepAlive.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): KeepAlive.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): KeepAlive.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): KeepAlive.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: KeepAlive.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: KeepAlive.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: KeepAlive.IRequest);

        /** Request c2s. */
        public c2s: KeepAlive.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: KeepAlive.IRequest): KeepAlive.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link KeepAlive.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: KeepAlive.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link KeepAlive.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: KeepAlive.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): KeepAlive.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): KeepAlive.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): KeepAlive.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: KeepAlive.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (KeepAlive.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: KeepAlive.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (KeepAlive.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: KeepAlive.IResponse): KeepAlive.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link KeepAlive.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: KeepAlive.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link KeepAlive.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: KeepAlive.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): KeepAlive.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): KeepAlive.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): KeepAlive.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: KeepAlive.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Notify. */
export namespace Notify {

    /** NotifyType enum. */
    enum NotifyType {
        NotifyType_None = 0,
        NotifyType_GtwEvent = 1
    }

    /** GtwEventType enum. */
    enum GtwEventType {
        GtwEventType_None = 0,
        GtwEventType_LocalCfgLoadFailed = 1,
        GtwEventType_APISvrRunFailed = 2,
        GtwEventType_ForceUpdate = 3,
        GtwEventType_LoginFailed = 4,
        GtwEventType_UnAgreeDisclaimer = 5,
        GtwEventType_NetCfgMissing = 6,
        GtwEventType_KickedOut = 7,
        GtwEventType_LoginPwdChanged = 8,
        GtwEventType_BanLogin = 9,
        GtwEventType_NeedPicVerifyCode = 10,
        GtwEventType_NeedPhoneVerifyCode = 11,
        GtwEventType_AppDataNotExist = 12,
        GtwEventType_NessaryDataMissing = 13,
        GtwEventType_TradePwdChanged = 14,
        GtwEventType_EnableDeviceLock = 15
    }

    /** Properties of a GtwEvent. */
    interface IGtwEvent {

        /** GtwEvent eventType */
        eventType: number;

        /** GtwEvent desc */
        desc: string;
    }

    /** Represents a GtwEvent. */
    class GtwEvent implements IGtwEvent {

        /**
         * Constructs a new GtwEvent.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IGtwEvent);

        /** GtwEvent eventType. */
        public eventType: number;

        /** GtwEvent desc. */
        public desc: string;

        /**
         * Creates a new GtwEvent instance using the specified properties.
         * @param [properties] Properties to set
         * @returns GtwEvent instance
         */
        public static create(properties?: Notify.IGtwEvent): Notify.GtwEvent;

        /**
         * Encodes the specified GtwEvent message. Does not implicitly {@link Notify.GtwEvent.verify|verify} messages.
         * @param message GtwEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IGtwEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified GtwEvent message, length delimited. Does not implicitly {@link Notify.GtwEvent.verify|verify} messages.
         * @param message GtwEvent message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IGtwEvent, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a GtwEvent message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns GtwEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.GtwEvent;

        /**
         * Decodes a GtwEvent message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns GtwEvent
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.GtwEvent;

        /**
         * Verifies a GtwEvent message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a GtwEvent message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns GtwEvent
         */
        public static fromObject(object: { [k: string]: any }): Notify.GtwEvent;

        /**
         * Creates a plain object from a GtwEvent message. Also converts values to other types if specified.
         * @param message GtwEvent
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.GtwEvent, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this GtwEvent to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C type */
        type: number;

        /** S2C event */
        event?: (Notify.IGtwEvent|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IS2C);

        /** S2C type. */
        public type: number;

        /** S2C event. */
        public event?: (Notify.IGtwEvent|null);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Notify.IS2C): Notify.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Notify.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Notify.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Notify.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Notify.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Notify.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Notify.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Notify.IResponse): Notify.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Notify.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Notify.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Notify.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Notify.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Notify.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Notify.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Notify.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Notify.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetBasicQot. */
export namespace Qot_GetBasicQot {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBasicQot.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetBasicQot.IC2S): Qot_GetBasicQot.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetBasicQot.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBasicQot.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetBasicQot.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBasicQot.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBasicQot.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBasicQot.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBasicQot.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBasicQot.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C basicQotList */
        basicQotList?: (Qot_Common.IBasicQot[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBasicQot.IS2C);

        /** S2C basicQotList. */
        public basicQotList: Qot_Common.IBasicQot[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetBasicQot.IS2C): Qot_GetBasicQot.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetBasicQot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBasicQot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetBasicQot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBasicQot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBasicQot.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBasicQot.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBasicQot.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBasicQot.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetBasicQot.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBasicQot.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetBasicQot.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetBasicQot.IRequest): Qot_GetBasicQot.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetBasicQot.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBasicQot.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetBasicQot.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBasicQot.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBasicQot.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBasicQot.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBasicQot.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBasicQot.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetBasicQot.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBasicQot.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetBasicQot.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetBasicQot.IResponse): Qot_GetBasicQot.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetBasicQot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBasicQot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetBasicQot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBasicQot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBasicQot.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBasicQot.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBasicQot.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBasicQot.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetBroker. */
export namespace Qot_GetBroker {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBroker.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetBroker.IC2S): Qot_GetBroker.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetBroker.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBroker.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetBroker.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBroker.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBroker.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBroker.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBroker.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBroker.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C brokerAskList */
        brokerAskList?: (Qot_Common.IBroker[]|null);

        /** S2C brokerBidList */
        brokerBidList?: (Qot_Common.IBroker[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBroker.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C brokerAskList. */
        public brokerAskList: Qot_Common.IBroker[];

        /** S2C brokerBidList. */
        public brokerBidList: Qot_Common.IBroker[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetBroker.IS2C): Qot_GetBroker.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetBroker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBroker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetBroker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBroker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBroker.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBroker.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBroker.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBroker.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetBroker.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBroker.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetBroker.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetBroker.IRequest): Qot_GetBroker.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetBroker.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBroker.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetBroker.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBroker.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBroker.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBroker.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBroker.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBroker.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetBroker.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetBroker.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetBroker.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetBroker.IResponse): Qot_GetBroker.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetBroker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetBroker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetBroker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetBroker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetBroker.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetBroker.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetBroker.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetBroker.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetHistoryKL. */
export namespace Qot_GetHistoryKL {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S rehabType */
        rehabType: number;

        /** C2S klType */
        klType: number;

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S beginTime */
        beginTime: string;

        /** C2S endTime */
        endTime: string;

        /** C2S maxAckKLNum */
        maxAckKLNum?: (number|null);

        /** C2S needKLFieldsFlag */
        needKLFieldsFlag?: (number|Long|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKL.IC2S);

        /** C2S rehabType. */
        public rehabType: number;

        /** C2S klType. */
        public klType: number;

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /** C2S maxAckKLNum. */
        public maxAckKLNum: number;

        /** C2S needKLFieldsFlag. */
        public needKLFieldsFlag: (number|Long);

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetHistoryKL.IC2S): Qot_GetHistoryKL.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetHistoryKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetHistoryKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKL.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKL.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKL.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKL.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C klList */
        klList?: (Qot_Common.IKLine[]|null);

        /** S2C nextKLTime */
        nextKLTime?: (string|null);

        /** S2C nextKLTimestamp */
        nextKLTimestamp?: (number|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKL.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C klList. */
        public klList: Qot_Common.IKLine[];

        /** S2C nextKLTime. */
        public nextKLTime: string;

        /** S2C nextKLTimestamp. */
        public nextKLTimestamp: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetHistoryKL.IS2C): Qot_GetHistoryKL.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetHistoryKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetHistoryKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKL.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKL.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKL.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKL.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetHistoryKL.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKL.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetHistoryKL.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetHistoryKL.IRequest): Qot_GetHistoryKL.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetHistoryKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetHistoryKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKL.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKL.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKL.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKL.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetHistoryKL.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKL.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetHistoryKL.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetHistoryKL.IResponse): Qot_GetHistoryKL.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetHistoryKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetHistoryKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKL.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKL.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKL.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKL.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetHistoryKLPoints. */
export namespace Qot_GetHistoryKLPoints {

    /** NoDataMode enum. */
    enum NoDataMode {
        NoDataMode_Null = 0,
        NoDataMode_Forward = 1,
        NoDataMode_Backward = 2
    }

    /** DataStatus enum. */
    enum DataStatus {
        DataStatus_Null = 0,
        DataStatus_Current = 1,
        DataStatus_Previous = 2,
        DataStatus_Back = 3
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S rehabType */
        rehabType: number;

        /** C2S klType */
        klType: number;

        /** C2S noDataMode */
        noDataMode: number;

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);

        /** C2S timeList */
        timeList?: (string[]|null);

        /** C2S maxReqSecurityNum */
        maxReqSecurityNum?: (number|null);

        /** C2S needKLFieldsFlag */
        needKLFieldsFlag?: (number|Long|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.IC2S);

        /** C2S rehabType. */
        public rehabType: number;

        /** C2S klType. */
        public klType: number;

        /** C2S noDataMode. */
        public noDataMode: number;

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /** C2S timeList. */
        public timeList: string[];

        /** C2S maxReqSecurityNum. */
        public maxReqSecurityNum: number;

        /** C2S needKLFieldsFlag. */
        public needKLFieldsFlag: (number|Long);

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.IC2S): Qot_GetHistoryKLPoints.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetHistoryKLPoints.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a HistoryPointsKL. */
    interface IHistoryPointsKL {

        /** HistoryPointsKL status */
        status: number;

        /** HistoryPointsKL reqTime */
        reqTime: string;

        /** HistoryPointsKL kl */
        kl: Qot_Common.IKLine;
    }

    /** Represents a HistoryPointsKL. */
    class HistoryPointsKL implements IHistoryPointsKL {

        /**
         * Constructs a new HistoryPointsKL.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.IHistoryPointsKL);

        /** HistoryPointsKL status. */
        public status: number;

        /** HistoryPointsKL reqTime. */
        public reqTime: string;

        /** HistoryPointsKL kl. */
        public kl: Qot_Common.IKLine;

        /**
         * Creates a new HistoryPointsKL instance using the specified properties.
         * @param [properties] Properties to set
         * @returns HistoryPointsKL instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.IHistoryPointsKL): Qot_GetHistoryKLPoints.HistoryPointsKL;

        /**
         * Encodes the specified HistoryPointsKL message. Does not implicitly {@link Qot_GetHistoryKLPoints.HistoryPointsKL.verify|verify} messages.
         * @param message HistoryPointsKL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.IHistoryPointsKL, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified HistoryPointsKL message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.HistoryPointsKL.verify|verify} messages.
         * @param message HistoryPointsKL message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.IHistoryPointsKL, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a HistoryPointsKL message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns HistoryPointsKL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.HistoryPointsKL;

        /**
         * Decodes a HistoryPointsKL message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns HistoryPointsKL
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.HistoryPointsKL;

        /**
         * Verifies a HistoryPointsKL message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a HistoryPointsKL message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns HistoryPointsKL
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.HistoryPointsKL;

        /**
         * Creates a plain object from a HistoryPointsKL message. Also converts values to other types if specified.
         * @param message HistoryPointsKL
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.HistoryPointsKL, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this HistoryPointsKL to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityHistoryKLPoints. */
    interface ISecurityHistoryKLPoints {

        /** SecurityHistoryKLPoints security */
        security: Qot_Common.ISecurity;

        /** SecurityHistoryKLPoints klList */
        klList?: (Qot_GetHistoryKLPoints.IHistoryPointsKL[]|null);
    }

    /** Represents a SecurityHistoryKLPoints. */
    class SecurityHistoryKLPoints implements ISecurityHistoryKLPoints {

        /**
         * Constructs a new SecurityHistoryKLPoints.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints);

        /** SecurityHistoryKLPoints security. */
        public security: Qot_Common.ISecurity;

        /** SecurityHistoryKLPoints klList. */
        public klList: Qot_GetHistoryKLPoints.IHistoryPointsKL[];

        /**
         * Creates a new SecurityHistoryKLPoints instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityHistoryKLPoints instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints): Qot_GetHistoryKLPoints.SecurityHistoryKLPoints;

        /**
         * Encodes the specified SecurityHistoryKLPoints message. Does not implicitly {@link Qot_GetHistoryKLPoints.SecurityHistoryKLPoints.verify|verify} messages.
         * @param message SecurityHistoryKLPoints message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityHistoryKLPoints message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.SecurityHistoryKLPoints.verify|verify} messages.
         * @param message SecurityHistoryKLPoints message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityHistoryKLPoints message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityHistoryKLPoints
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.SecurityHistoryKLPoints;

        /**
         * Decodes a SecurityHistoryKLPoints message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityHistoryKLPoints
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.SecurityHistoryKLPoints;

        /**
         * Verifies a SecurityHistoryKLPoints message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityHistoryKLPoints message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityHistoryKLPoints
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.SecurityHistoryKLPoints;

        /**
         * Creates a plain object from a SecurityHistoryKLPoints message. Also converts values to other types if specified.
         * @param message SecurityHistoryKLPoints
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.SecurityHistoryKLPoints, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityHistoryKLPoints to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C klPointList */
        klPointList?: (Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints[]|null);

        /** S2C hasNext */
        hasNext?: (boolean|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.IS2C);

        /** S2C klPointList. */
        public klPointList: Qot_GetHistoryKLPoints.ISecurityHistoryKLPoints[];

        /** S2C hasNext. */
        public hasNext: boolean;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.IS2C): Qot_GetHistoryKLPoints.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetHistoryKLPoints.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetHistoryKLPoints.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetHistoryKLPoints.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.IRequest): Qot_GetHistoryKLPoints.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetHistoryKLPoints.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetHistoryKLPoints.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHistoryKLPoints.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetHistoryKLPoints.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetHistoryKLPoints.IResponse): Qot_GetHistoryKLPoints.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetHistoryKLPoints.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHistoryKLPoints.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetHistoryKLPoints.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHistoryKLPoints.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHistoryKLPoints.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHistoryKLPoints.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHistoryKLPoints.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHistoryKLPoints.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetHoldingChangeList. */
export namespace Qot_GetHoldingChangeList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S holderCategory */
        holderCategory: number;

        /** C2S beginTime */
        beginTime?: (string|null);

        /** C2S endTime */
        endTime?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHoldingChangeList.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S holderCategory. */
        public holderCategory: number;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetHoldingChangeList.IC2S): Qot_GetHoldingChangeList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetHoldingChangeList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHoldingChangeList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetHoldingChangeList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHoldingChangeList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHoldingChangeList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHoldingChangeList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHoldingChangeList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHoldingChangeList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C holdingChangeList */
        holdingChangeList?: (Qot_Common.IShareHoldingChange[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHoldingChangeList.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C holdingChangeList. */
        public holdingChangeList: Qot_Common.IShareHoldingChange[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetHoldingChangeList.IS2C): Qot_GetHoldingChangeList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetHoldingChangeList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHoldingChangeList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetHoldingChangeList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHoldingChangeList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHoldingChangeList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHoldingChangeList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHoldingChangeList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHoldingChangeList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetHoldingChangeList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHoldingChangeList.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetHoldingChangeList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetHoldingChangeList.IRequest): Qot_GetHoldingChangeList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetHoldingChangeList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHoldingChangeList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetHoldingChangeList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHoldingChangeList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHoldingChangeList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHoldingChangeList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHoldingChangeList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHoldingChangeList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetHoldingChangeList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetHoldingChangeList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetHoldingChangeList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetHoldingChangeList.IResponse): Qot_GetHoldingChangeList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetHoldingChangeList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetHoldingChangeList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetHoldingChangeList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetHoldingChangeList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetHoldingChangeList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetHoldingChangeList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetHoldingChangeList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetHoldingChangeList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetKL. */
export namespace Qot_GetKL {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S rehabType */
        rehabType: number;

        /** C2S klType */
        klType: number;

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S reqNum */
        reqNum: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetKL.IC2S);

        /** C2S rehabType. */
        public rehabType: number;

        /** C2S klType. */
        public klType: number;

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S reqNum. */
        public reqNum: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetKL.IC2S): Qot_GetKL.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetKL.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetKL.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetKL.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetKL.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C klList */
        klList?: (Qot_Common.IKLine[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetKL.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C klList. */
        public klList: Qot_Common.IKLine[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetKL.IS2C): Qot_GetKL.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetKL.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetKL.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetKL.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetKL.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetKL.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetKL.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetKL.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetKL.IRequest): Qot_GetKL.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetKL.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetKL.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetKL.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetKL.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetKL.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetKL.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetKL.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetKL.IResponse): Qot_GetKL.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetKL.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetKL.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetKL.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetKL.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetOptionChain. */
export namespace Qot_GetOptionChain {

    /** OptionCondType enum. */
    enum OptionCondType {
        OptionCondType_Unknow = 0,
        OptionCondType_WithIn = 1,
        OptionCondType_Outside = 2
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S owner */
        owner: Qot_Common.ISecurity;

        /** C2S type */
        type?: (number|null);

        /** C2S condition */
        condition?: (number|null);

        /** C2S beginTime */
        beginTime: string;

        /** C2S endTime */
        endTime: string;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IC2S);

        /** C2S owner. */
        public owner: Qot_Common.ISecurity;

        /** C2S type. */
        public type: number;

        /** C2S condition. */
        public condition: number;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetOptionChain.IC2S): Qot_GetOptionChain.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetOptionChain.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetOptionChain.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OptionItem. */
    interface IOptionItem {

        /** OptionItem call */
        call?: (Qot_Common.ISecurityStaticInfo|null);

        /** OptionItem put */
        put?: (Qot_Common.ISecurityStaticInfo|null);
    }

    /** Represents an OptionItem. */
    class OptionItem implements IOptionItem {

        /**
         * Constructs a new OptionItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IOptionItem);

        /** OptionItem call. */
        public call?: (Qot_Common.ISecurityStaticInfo|null);

        /** OptionItem put. */
        public put?: (Qot_Common.ISecurityStaticInfo|null);

        /**
         * Creates a new OptionItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionItem instance
         */
        public static create(properties?: Qot_GetOptionChain.IOptionItem): Qot_GetOptionChain.OptionItem;

        /**
         * Encodes the specified OptionItem message. Does not implicitly {@link Qot_GetOptionChain.OptionItem.verify|verify} messages.
         * @param message OptionItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IOptionItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionItem message, length delimited. Does not implicitly {@link Qot_GetOptionChain.OptionItem.verify|verify} messages.
         * @param message OptionItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IOptionItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.OptionItem;

        /**
         * Decodes an OptionItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.OptionItem;

        /**
         * Verifies an OptionItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionItem
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.OptionItem;

        /**
         * Creates a plain object from an OptionItem message. Also converts values to other types if specified.
         * @param message OptionItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.OptionItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OptionChain. */
    interface IOptionChain {

        /** OptionChain strikeTime */
        strikeTime: string;

        /** OptionChain option */
        option?: (Qot_GetOptionChain.IOptionItem[]|null);

        /** OptionChain strikeTimestamp */
        strikeTimestamp?: (number|null);
    }

    /** Represents an OptionChain. */
    class OptionChain implements IOptionChain {

        /**
         * Constructs a new OptionChain.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IOptionChain);

        /** OptionChain strikeTime. */
        public strikeTime: string;

        /** OptionChain option. */
        public option: Qot_GetOptionChain.IOptionItem[];

        /** OptionChain strikeTimestamp. */
        public strikeTimestamp: number;

        /**
         * Creates a new OptionChain instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionChain instance
         */
        public static create(properties?: Qot_GetOptionChain.IOptionChain): Qot_GetOptionChain.OptionChain;

        /**
         * Encodes the specified OptionChain message. Does not implicitly {@link Qot_GetOptionChain.OptionChain.verify|verify} messages.
         * @param message OptionChain message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IOptionChain, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionChain message, length delimited. Does not implicitly {@link Qot_GetOptionChain.OptionChain.verify|verify} messages.
         * @param message OptionChain message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IOptionChain, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionChain message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionChain
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.OptionChain;

        /**
         * Decodes an OptionChain message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionChain
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.OptionChain;

        /**
         * Verifies an OptionChain message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionChain message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionChain
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.OptionChain;

        /**
         * Creates a plain object from an OptionChain message. Also converts values to other types if specified.
         * @param message OptionChain
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.OptionChain, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionChain to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C optionChain */
        optionChain?: (Qot_GetOptionChain.IOptionChain[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IS2C);

        /** S2C optionChain. */
        public optionChain: Qot_GetOptionChain.IOptionChain[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetOptionChain.IS2C): Qot_GetOptionChain.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetOptionChain.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetOptionChain.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetOptionChain.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetOptionChain.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetOptionChain.IRequest): Qot_GetOptionChain.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetOptionChain.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetOptionChain.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetOptionChain.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOptionChain.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetOptionChain.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetOptionChain.IResponse): Qot_GetOptionChain.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetOptionChain.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOptionChain.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetOptionChain.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOptionChain.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOptionChain.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOptionChain.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOptionChain.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOptionChain.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetOrderBook. */
export namespace Qot_GetOrderBook {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S num */
        num: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderBook.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S num. */
        public num: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetOrderBook.IC2S): Qot_GetOrderBook.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetOrderBook.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderBook.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetOrderBook.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderBook.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderBook.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderBook.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderBook.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderBook.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C orderBookAskList */
        orderBookAskList?: (Qot_Common.IOrderBook[]|null);

        /** S2C orderBookBidList */
        orderBookBidList?: (Qot_Common.IOrderBook[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderBook.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C orderBookAskList. */
        public orderBookAskList: Qot_Common.IOrderBook[];

        /** S2C orderBookBidList. */
        public orderBookBidList: Qot_Common.IOrderBook[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetOrderBook.IS2C): Qot_GetOrderBook.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetOrderBook.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderBook.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetOrderBook.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderBook.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderBook.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderBook.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderBook.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderBook.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetOrderBook.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderBook.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetOrderBook.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetOrderBook.IRequest): Qot_GetOrderBook.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetOrderBook.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderBook.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetOrderBook.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderBook.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderBook.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderBook.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderBook.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderBook.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetOrderBook.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderBook.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetOrderBook.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetOrderBook.IResponse): Qot_GetOrderBook.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetOrderBook.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderBook.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetOrderBook.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderBook.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderBook.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderBook.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderBook.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderBook.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetOrderDetail. */
export namespace Qot_GetOrderDetail {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderDetail.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetOrderDetail.IC2S): Qot_GetOrderDetail.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetOrderDetail.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderDetail.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetOrderDetail.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderDetail.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderDetail.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderDetail.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderDetail.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderDetail.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C orderDetailAsk */
        orderDetailAsk: Qot_Common.IOrderDetail;

        /** S2C orderDetailBid */
        orderDetailBid: Qot_Common.IOrderDetail;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderDetail.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C orderDetailAsk. */
        public orderDetailAsk: Qot_Common.IOrderDetail;

        /** S2C orderDetailBid. */
        public orderDetailBid: Qot_Common.IOrderDetail;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetOrderDetail.IS2C): Qot_GetOrderDetail.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetOrderDetail.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderDetail.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetOrderDetail.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderDetail.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderDetail.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderDetail.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderDetail.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderDetail.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetOrderDetail.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderDetail.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetOrderDetail.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetOrderDetail.IRequest): Qot_GetOrderDetail.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetOrderDetail.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderDetail.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetOrderDetail.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderDetail.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderDetail.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderDetail.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderDetail.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderDetail.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetOrderDetail.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOrderDetail.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetOrderDetail.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetOrderDetail.IResponse): Qot_GetOrderDetail.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetOrderDetail.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOrderDetail.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetOrderDetail.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOrderDetail.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOrderDetail.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOrderDetail.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOrderDetail.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOrderDetail.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetOwnerPlate. */
export namespace Qot_GetOwnerPlate {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOwnerPlate.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetOwnerPlate.IC2S): Qot_GetOwnerPlate.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetOwnerPlate.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOwnerPlate.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetOwnerPlate.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOwnerPlate.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOwnerPlate.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOwnerPlate.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOwnerPlate.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOwnerPlate.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityOwnerPlate. */
    interface ISecurityOwnerPlate {

        /** SecurityOwnerPlate security */
        security: Qot_Common.ISecurity;

        /** SecurityOwnerPlate plateInfoList */
        plateInfoList?: (Qot_Common.IPlateInfo[]|null);
    }

    /** Represents a SecurityOwnerPlate. */
    class SecurityOwnerPlate implements ISecurityOwnerPlate {

        /**
         * Constructs a new SecurityOwnerPlate.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOwnerPlate.ISecurityOwnerPlate);

        /** SecurityOwnerPlate security. */
        public security: Qot_Common.ISecurity;

        /** SecurityOwnerPlate plateInfoList. */
        public plateInfoList: Qot_Common.IPlateInfo[];

        /**
         * Creates a new SecurityOwnerPlate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityOwnerPlate instance
         */
        public static create(properties?: Qot_GetOwnerPlate.ISecurityOwnerPlate): Qot_GetOwnerPlate.SecurityOwnerPlate;

        /**
         * Encodes the specified SecurityOwnerPlate message. Does not implicitly {@link Qot_GetOwnerPlate.SecurityOwnerPlate.verify|verify} messages.
         * @param message SecurityOwnerPlate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOwnerPlate.ISecurityOwnerPlate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityOwnerPlate message, length delimited. Does not implicitly {@link Qot_GetOwnerPlate.SecurityOwnerPlate.verify|verify} messages.
         * @param message SecurityOwnerPlate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOwnerPlate.ISecurityOwnerPlate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityOwnerPlate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityOwnerPlate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOwnerPlate.SecurityOwnerPlate;

        /**
         * Decodes a SecurityOwnerPlate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityOwnerPlate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOwnerPlate.SecurityOwnerPlate;

        /**
         * Verifies a SecurityOwnerPlate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityOwnerPlate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityOwnerPlate
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOwnerPlate.SecurityOwnerPlate;

        /**
         * Creates a plain object from a SecurityOwnerPlate message. Also converts values to other types if specified.
         * @param message SecurityOwnerPlate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOwnerPlate.SecurityOwnerPlate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityOwnerPlate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C ownerPlateList */
        ownerPlateList?: (Qot_GetOwnerPlate.ISecurityOwnerPlate[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOwnerPlate.IS2C);

        /** S2C ownerPlateList. */
        public ownerPlateList: Qot_GetOwnerPlate.ISecurityOwnerPlate[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetOwnerPlate.IS2C): Qot_GetOwnerPlate.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetOwnerPlate.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOwnerPlate.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetOwnerPlate.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOwnerPlate.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOwnerPlate.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOwnerPlate.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOwnerPlate.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOwnerPlate.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetOwnerPlate.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOwnerPlate.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetOwnerPlate.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetOwnerPlate.IRequest): Qot_GetOwnerPlate.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetOwnerPlate.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOwnerPlate.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetOwnerPlate.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOwnerPlate.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOwnerPlate.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOwnerPlate.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOwnerPlate.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOwnerPlate.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetOwnerPlate.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetOwnerPlate.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetOwnerPlate.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetOwnerPlate.IResponse): Qot_GetOwnerPlate.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetOwnerPlate.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetOwnerPlate.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetOwnerPlate.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetOwnerPlate.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetOwnerPlate.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetOwnerPlate.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetOwnerPlate.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetOwnerPlate.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetPlateSecurity. */
export namespace Qot_GetPlateSecurity {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S plate */
        plate: Qot_Common.ISecurity;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSecurity.IC2S);

        /** C2S plate. */
        public plate: Qot_Common.ISecurity;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetPlateSecurity.IC2S): Qot_GetPlateSecurity.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetPlateSecurity.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSecurity.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetPlateSecurity.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSecurity.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSecurity.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSecurity.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSecurity.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSecurity.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C staticInfoList */
        staticInfoList?: (Qot_Common.ISecurityStaticInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSecurity.IS2C);

        /** S2C staticInfoList. */
        public staticInfoList: Qot_Common.ISecurityStaticInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetPlateSecurity.IS2C): Qot_GetPlateSecurity.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetPlateSecurity.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSecurity.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetPlateSecurity.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSecurity.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSecurity.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSecurity.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSecurity.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSecurity.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetPlateSecurity.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSecurity.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetPlateSecurity.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetPlateSecurity.IRequest): Qot_GetPlateSecurity.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetPlateSecurity.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSecurity.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetPlateSecurity.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSecurity.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSecurity.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSecurity.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSecurity.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSecurity.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetPlateSecurity.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSecurity.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetPlateSecurity.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetPlateSecurity.IResponse): Qot_GetPlateSecurity.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetPlateSecurity.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSecurity.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetPlateSecurity.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSecurity.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSecurity.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSecurity.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSecurity.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSecurity.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetPlateSet. */
export namespace Qot_GetPlateSet {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S market */
        market: number;

        /** C2S plateSetType */
        plateSetType: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSet.IC2S);

        /** C2S market. */
        public market: number;

        /** C2S plateSetType. */
        public plateSetType: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetPlateSet.IC2S): Qot_GetPlateSet.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetPlateSet.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSet.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetPlateSet.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSet.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSet.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSet.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSet.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSet.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C plateInfoList */
        plateInfoList?: (Qot_Common.IPlateInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSet.IS2C);

        /** S2C plateInfoList. */
        public plateInfoList: Qot_Common.IPlateInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetPlateSet.IS2C): Qot_GetPlateSet.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetPlateSet.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSet.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetPlateSet.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSet.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSet.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSet.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSet.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSet.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetPlateSet.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSet.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetPlateSet.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetPlateSet.IRequest): Qot_GetPlateSet.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetPlateSet.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSet.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetPlateSet.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSet.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSet.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSet.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSet.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSet.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetPlateSet.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetPlateSet.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetPlateSet.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetPlateSet.IResponse): Qot_GetPlateSet.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetPlateSet.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetPlateSet.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetPlateSet.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetPlateSet.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetPlateSet.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetPlateSet.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetPlateSet.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetPlateSet.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetRT. */
export namespace Qot_GetRT {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRT.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetRT.IC2S): Qot_GetRT.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetRT.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRT.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetRT.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRT.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRT.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRT.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRT.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRT.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C rtList */
        rtList?: (Qot_Common.ITimeShare[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRT.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C rtList. */
        public rtList: Qot_Common.ITimeShare[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetRT.IS2C): Qot_GetRT.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetRT.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRT.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetRT.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRT.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRT.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRT.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRT.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRT.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetRT.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRT.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetRT.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetRT.IRequest): Qot_GetRT.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetRT.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRT.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetRT.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRT.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRT.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRT.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRT.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRT.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetRT.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRT.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetRT.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetRT.IResponse): Qot_GetRT.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetRT.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRT.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetRT.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRT.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRT.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRT.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRT.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRT.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetReference. */
export namespace Qot_GetReference {

    /** ReferenceType enum. */
    enum ReferenceType {
        ReferenceType_Unknow = 0,
        ReferenceType_Warrant = 1
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S referenceType */
        referenceType: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetReference.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S referenceType. */
        public referenceType: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetReference.IC2S): Qot_GetReference.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetReference.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetReference.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetReference.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetReference.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetReference.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetReference.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetReference.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetReference.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C staticInfoList */
        staticInfoList?: (Qot_Common.ISecurityStaticInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetReference.IS2C);

        /** S2C staticInfoList. */
        public staticInfoList: Qot_Common.ISecurityStaticInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetReference.IS2C): Qot_GetReference.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetReference.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetReference.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetReference.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetReference.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetReference.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetReference.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetReference.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetReference.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetReference.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetReference.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetReference.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetReference.IRequest): Qot_GetReference.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetReference.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetReference.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetReference.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetReference.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetReference.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetReference.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetReference.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetReference.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetReference.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetReference.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetReference.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetReference.IResponse): Qot_GetReference.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetReference.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetReference.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetReference.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetReference.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetReference.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetReference.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetReference.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetReference.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetRehab. */
export namespace Qot_GetRehab {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRehab.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetRehab.IC2S): Qot_GetRehab.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetRehab.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRehab.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetRehab.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRehab.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRehab.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRehab.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRehab.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRehab.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecurityRehab. */
    interface ISecurityRehab {

        /** SecurityRehab security */
        security: Qot_Common.ISecurity;

        /** SecurityRehab rehabList */
        rehabList?: (Qot_Common.IRehab[]|null);
    }

    /** Represents a SecurityRehab. */
    class SecurityRehab implements ISecurityRehab {

        /**
         * Constructs a new SecurityRehab.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRehab.ISecurityRehab);

        /** SecurityRehab security. */
        public security: Qot_Common.ISecurity;

        /** SecurityRehab rehabList. */
        public rehabList: Qot_Common.IRehab[];

        /**
         * Creates a new SecurityRehab instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecurityRehab instance
         */
        public static create(properties?: Qot_GetRehab.ISecurityRehab): Qot_GetRehab.SecurityRehab;

        /**
         * Encodes the specified SecurityRehab message. Does not implicitly {@link Qot_GetRehab.SecurityRehab.verify|verify} messages.
         * @param message SecurityRehab message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRehab.ISecurityRehab, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecurityRehab message, length delimited. Does not implicitly {@link Qot_GetRehab.SecurityRehab.verify|verify} messages.
         * @param message SecurityRehab message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRehab.ISecurityRehab, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecurityRehab message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecurityRehab
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRehab.SecurityRehab;

        /**
         * Decodes a SecurityRehab message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecurityRehab
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRehab.SecurityRehab;

        /**
         * Verifies a SecurityRehab message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecurityRehab message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecurityRehab
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRehab.SecurityRehab;

        /**
         * Creates a plain object from a SecurityRehab message. Also converts values to other types if specified.
         * @param message SecurityRehab
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRehab.SecurityRehab, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecurityRehab to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C securityRehabList */
        securityRehabList?: (Qot_GetRehab.ISecurityRehab[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRehab.IS2C);

        /** S2C securityRehabList. */
        public securityRehabList: Qot_GetRehab.ISecurityRehab[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetRehab.IS2C): Qot_GetRehab.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetRehab.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRehab.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetRehab.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRehab.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRehab.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRehab.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRehab.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRehab.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetRehab.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRehab.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetRehab.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetRehab.IRequest): Qot_GetRehab.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetRehab.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRehab.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetRehab.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRehab.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRehab.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRehab.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRehab.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRehab.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetRehab.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetRehab.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetRehab.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetRehab.IResponse): Qot_GetRehab.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetRehab.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetRehab.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetRehab.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetRehab.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetRehab.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetRehab.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetRehab.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetRehab.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetSecuritySnapshot. */
export namespace Qot_GetSecuritySnapshot {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IC2S): Qot_GetSecuritySnapshot.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetSecuritySnapshot.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an EquitySnapshotExData. */
    interface IEquitySnapshotExData {

        /** EquitySnapshotExData issuedShares */
        issuedShares: (number|Long);

        /** EquitySnapshotExData issuedMarketVal */
        issuedMarketVal: number;

        /** EquitySnapshotExData netAsset */
        netAsset: number;

        /** EquitySnapshotExData netProfit */
        netProfit: number;

        /** EquitySnapshotExData earningsPershare */
        earningsPershare: number;

        /** EquitySnapshotExData outstandingShares */
        outstandingShares: (number|Long);

        /** EquitySnapshotExData outstandingMarketVal */
        outstandingMarketVal: number;

        /** EquitySnapshotExData netAssetPershare */
        netAssetPershare: number;

        /** EquitySnapshotExData eyRate */
        eyRate: number;

        /** EquitySnapshotExData peRate */
        peRate: number;

        /** EquitySnapshotExData pbRate */
        pbRate: number;

        /** EquitySnapshotExData peTTMRate */
        peTTMRate: number;
    }

    /** Represents an EquitySnapshotExData. */
    class EquitySnapshotExData implements IEquitySnapshotExData {

        /**
         * Constructs a new EquitySnapshotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IEquitySnapshotExData);

        /** EquitySnapshotExData issuedShares. */
        public issuedShares: (number|Long);

        /** EquitySnapshotExData issuedMarketVal. */
        public issuedMarketVal: number;

        /** EquitySnapshotExData netAsset. */
        public netAsset: number;

        /** EquitySnapshotExData netProfit. */
        public netProfit: number;

        /** EquitySnapshotExData earningsPershare. */
        public earningsPershare: number;

        /** EquitySnapshotExData outstandingShares. */
        public outstandingShares: (number|Long);

        /** EquitySnapshotExData outstandingMarketVal. */
        public outstandingMarketVal: number;

        /** EquitySnapshotExData netAssetPershare. */
        public netAssetPershare: number;

        /** EquitySnapshotExData eyRate. */
        public eyRate: number;

        /** EquitySnapshotExData peRate. */
        public peRate: number;

        /** EquitySnapshotExData pbRate. */
        public pbRate: number;

        /** EquitySnapshotExData peTTMRate. */
        public peTTMRate: number;

        /**
         * Creates a new EquitySnapshotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns EquitySnapshotExData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IEquitySnapshotExData): Qot_GetSecuritySnapshot.EquitySnapshotExData;

        /**
         * Encodes the specified EquitySnapshotExData message. Does not implicitly {@link Qot_GetSecuritySnapshot.EquitySnapshotExData.verify|verify} messages.
         * @param message EquitySnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IEquitySnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified EquitySnapshotExData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.EquitySnapshotExData.verify|verify} messages.
         * @param message EquitySnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IEquitySnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an EquitySnapshotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns EquitySnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.EquitySnapshotExData;

        /**
         * Decodes an EquitySnapshotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns EquitySnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.EquitySnapshotExData;

        /**
         * Verifies an EquitySnapshotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an EquitySnapshotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns EquitySnapshotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.EquitySnapshotExData;

        /**
         * Creates a plain object from an EquitySnapshotExData message. Also converts values to other types if specified.
         * @param message EquitySnapshotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.EquitySnapshotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this EquitySnapshotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarrantSnapshotExData. */
    interface IWarrantSnapshotExData {

        /** WarrantSnapshotExData conversionRate */
        conversionRate: number;

        /** WarrantSnapshotExData warrantType */
        warrantType: number;

        /** WarrantSnapshotExData strikePrice */
        strikePrice: number;

        /** WarrantSnapshotExData maturityTime */
        maturityTime: string;

        /** WarrantSnapshotExData endTradeTime */
        endTradeTime: string;

        /** WarrantSnapshotExData owner */
        owner: Qot_Common.ISecurity;

        /** WarrantSnapshotExData recoveryPrice */
        recoveryPrice: number;

        /** WarrantSnapshotExData streetVolumn */
        streetVolumn: (number|Long);

        /** WarrantSnapshotExData issueVolumn */
        issueVolumn: (number|Long);

        /** WarrantSnapshotExData streetRate */
        streetRate: number;

        /** WarrantSnapshotExData delta */
        delta: number;

        /** WarrantSnapshotExData impliedVolatility */
        impliedVolatility: number;

        /** WarrantSnapshotExData premium */
        premium: number;

        /** WarrantSnapshotExData maturityTimestamp */
        maturityTimestamp?: (number|null);

        /** WarrantSnapshotExData endTradeTimestamp */
        endTradeTimestamp?: (number|null);
    }

    /** Represents a WarrantSnapshotExData. */
    class WarrantSnapshotExData implements IWarrantSnapshotExData {

        /**
         * Constructs a new WarrantSnapshotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IWarrantSnapshotExData);

        /** WarrantSnapshotExData conversionRate. */
        public conversionRate: number;

        /** WarrantSnapshotExData warrantType. */
        public warrantType: number;

        /** WarrantSnapshotExData strikePrice. */
        public strikePrice: number;

        /** WarrantSnapshotExData maturityTime. */
        public maturityTime: string;

        /** WarrantSnapshotExData endTradeTime. */
        public endTradeTime: string;

        /** WarrantSnapshotExData owner. */
        public owner: Qot_Common.ISecurity;

        /** WarrantSnapshotExData recoveryPrice. */
        public recoveryPrice: number;

        /** WarrantSnapshotExData streetVolumn. */
        public streetVolumn: (number|Long);

        /** WarrantSnapshotExData issueVolumn. */
        public issueVolumn: (number|Long);

        /** WarrantSnapshotExData streetRate. */
        public streetRate: number;

        /** WarrantSnapshotExData delta. */
        public delta: number;

        /** WarrantSnapshotExData impliedVolatility. */
        public impliedVolatility: number;

        /** WarrantSnapshotExData premium. */
        public premium: number;

        /** WarrantSnapshotExData maturityTimestamp. */
        public maturityTimestamp: number;

        /** WarrantSnapshotExData endTradeTimestamp. */
        public endTradeTimestamp: number;

        /**
         * Creates a new WarrantSnapshotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarrantSnapshotExData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IWarrantSnapshotExData): Qot_GetSecuritySnapshot.WarrantSnapshotExData;

        /**
         * Encodes the specified WarrantSnapshotExData message. Does not implicitly {@link Qot_GetSecuritySnapshot.WarrantSnapshotExData.verify|verify} messages.
         * @param message WarrantSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IWarrantSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WarrantSnapshotExData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.WarrantSnapshotExData.verify|verify} messages.
         * @param message WarrantSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IWarrantSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WarrantSnapshotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarrantSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.WarrantSnapshotExData;

        /**
         * Decodes a WarrantSnapshotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarrantSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.WarrantSnapshotExData;

        /**
         * Verifies a WarrantSnapshotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarrantSnapshotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarrantSnapshotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.WarrantSnapshotExData;

        /**
         * Creates a plain object from a WarrantSnapshotExData message. Also converts values to other types if specified.
         * @param message WarrantSnapshotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.WarrantSnapshotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarrantSnapshotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OptionSnapshotExData. */
    interface IOptionSnapshotExData {

        /** OptionSnapshotExData type */
        type: number;

        /** OptionSnapshotExData owner */
        owner: Qot_Common.ISecurity;

        /** OptionSnapshotExData strikeTime */
        strikeTime: string;

        /** OptionSnapshotExData strikePrice */
        strikePrice: number;

        /** OptionSnapshotExData contractSize */
        contractSize: number;

        /** OptionSnapshotExData openInterest */
        openInterest: number;

        /** OptionSnapshotExData impliedVolatility */
        impliedVolatility: number;

        /** OptionSnapshotExData premium */
        premium: number;

        /** OptionSnapshotExData delta */
        delta: number;

        /** OptionSnapshotExData gamma */
        gamma: number;

        /** OptionSnapshotExData vega */
        vega: number;

        /** OptionSnapshotExData theta */
        theta: number;

        /** OptionSnapshotExData rho */
        rho: number;

        /** OptionSnapshotExData strikeTimestamp */
        strikeTimestamp?: (number|null);
    }

    /** Represents an OptionSnapshotExData. */
    class OptionSnapshotExData implements IOptionSnapshotExData {

        /**
         * Constructs a new OptionSnapshotExData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IOptionSnapshotExData);

        /** OptionSnapshotExData type. */
        public type: number;

        /** OptionSnapshotExData owner. */
        public owner: Qot_Common.ISecurity;

        /** OptionSnapshotExData strikeTime. */
        public strikeTime: string;

        /** OptionSnapshotExData strikePrice. */
        public strikePrice: number;

        /** OptionSnapshotExData contractSize. */
        public contractSize: number;

        /** OptionSnapshotExData openInterest. */
        public openInterest: number;

        /** OptionSnapshotExData impliedVolatility. */
        public impliedVolatility: number;

        /** OptionSnapshotExData premium. */
        public premium: number;

        /** OptionSnapshotExData delta. */
        public delta: number;

        /** OptionSnapshotExData gamma. */
        public gamma: number;

        /** OptionSnapshotExData vega. */
        public vega: number;

        /** OptionSnapshotExData theta. */
        public theta: number;

        /** OptionSnapshotExData rho. */
        public rho: number;

        /** OptionSnapshotExData strikeTimestamp. */
        public strikeTimestamp: number;

        /**
         * Creates a new OptionSnapshotExData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OptionSnapshotExData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IOptionSnapshotExData): Qot_GetSecuritySnapshot.OptionSnapshotExData;

        /**
         * Encodes the specified OptionSnapshotExData message. Does not implicitly {@link Qot_GetSecuritySnapshot.OptionSnapshotExData.verify|verify} messages.
         * @param message OptionSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IOptionSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OptionSnapshotExData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.OptionSnapshotExData.verify|verify} messages.
         * @param message OptionSnapshotExData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IOptionSnapshotExData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OptionSnapshotExData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OptionSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.OptionSnapshotExData;

        /**
         * Decodes an OptionSnapshotExData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OptionSnapshotExData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.OptionSnapshotExData;

        /**
         * Verifies an OptionSnapshotExData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OptionSnapshotExData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OptionSnapshotExData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.OptionSnapshotExData;

        /**
         * Creates a plain object from an OptionSnapshotExData message. Also converts values to other types if specified.
         * @param message OptionSnapshotExData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.OptionSnapshotExData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OptionSnapshotExData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SnapshotBasicData. */
    interface ISnapshotBasicData {

        /** SnapshotBasicData security */
        security: Qot_Common.ISecurity;

        /** SnapshotBasicData type */
        type: number;

        /** SnapshotBasicData isSuspend */
        isSuspend: boolean;

        /** SnapshotBasicData listTime */
        listTime: string;

        /** SnapshotBasicData lotSize */
        lotSize: number;

        /** SnapshotBasicData priceSpread */
        priceSpread: number;

        /** SnapshotBasicData updateTime */
        updateTime: string;

        /** SnapshotBasicData highPrice */
        highPrice: number;

        /** SnapshotBasicData openPrice */
        openPrice: number;

        /** SnapshotBasicData lowPrice */
        lowPrice: number;

        /** SnapshotBasicData lastClosePrice */
        lastClosePrice: number;

        /** SnapshotBasicData curPrice */
        curPrice: number;

        /** SnapshotBasicData volume */
        volume: (number|Long);

        /** SnapshotBasicData turnover */
        turnover: number;

        /** SnapshotBasicData turnoverRate */
        turnoverRate: number;

        /** SnapshotBasicData listTimestamp */
        listTimestamp?: (number|null);

        /** SnapshotBasicData updateTimestamp */
        updateTimestamp?: (number|null);

        /** SnapshotBasicData askPrice */
        askPrice?: (number|null);

        /** SnapshotBasicData bidPrice */
        bidPrice?: (number|null);

        /** SnapshotBasicData askVol */
        askVol?: (number|Long|null);

        /** SnapshotBasicData bidVol */
        bidVol?: (number|Long|null);

        /** SnapshotBasicData enableMargin */
        enableMargin?: (boolean|null);

        /** SnapshotBasicData mortgageRatio */
        mortgageRatio?: (number|null);

        /** SnapshotBasicData longMarginInitialRatio */
        longMarginInitialRatio?: (number|null);

        /** SnapshotBasicData enableShortSell */
        enableShortSell?: (boolean|null);

        /** SnapshotBasicData shortSellRate */
        shortSellRate?: (number|null);

        /** SnapshotBasicData shortAvailableVolume */
        shortAvailableVolume?: (number|Long|null);

        /** SnapshotBasicData shortMarginInitialRatio */
        shortMarginInitialRatio?: (number|null);
    }

    /** Represents a SnapshotBasicData. */
    class SnapshotBasicData implements ISnapshotBasicData {

        /**
         * Constructs a new SnapshotBasicData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.ISnapshotBasicData);

        /** SnapshotBasicData security. */
        public security: Qot_Common.ISecurity;

        /** SnapshotBasicData type. */
        public type: number;

        /** SnapshotBasicData isSuspend. */
        public isSuspend: boolean;

        /** SnapshotBasicData listTime. */
        public listTime: string;

        /** SnapshotBasicData lotSize. */
        public lotSize: number;

        /** SnapshotBasicData priceSpread. */
        public priceSpread: number;

        /** SnapshotBasicData updateTime. */
        public updateTime: string;

        /** SnapshotBasicData highPrice. */
        public highPrice: number;

        /** SnapshotBasicData openPrice. */
        public openPrice: number;

        /** SnapshotBasicData lowPrice. */
        public lowPrice: number;

        /** SnapshotBasicData lastClosePrice. */
        public lastClosePrice: number;

        /** SnapshotBasicData curPrice. */
        public curPrice: number;

        /** SnapshotBasicData volume. */
        public volume: (number|Long);

        /** SnapshotBasicData turnover. */
        public turnover: number;

        /** SnapshotBasicData turnoverRate. */
        public turnoverRate: number;

        /** SnapshotBasicData listTimestamp. */
        public listTimestamp: number;

        /** SnapshotBasicData updateTimestamp. */
        public updateTimestamp: number;

        /** SnapshotBasicData askPrice. */
        public askPrice: number;

        /** SnapshotBasicData bidPrice. */
        public bidPrice: number;

        /** SnapshotBasicData askVol. */
        public askVol: (number|Long);

        /** SnapshotBasicData bidVol. */
        public bidVol: (number|Long);

        /** SnapshotBasicData enableMargin. */
        public enableMargin: boolean;

        /** SnapshotBasicData mortgageRatio. */
        public mortgageRatio: number;

        /** SnapshotBasicData longMarginInitialRatio. */
        public longMarginInitialRatio: number;

        /** SnapshotBasicData enableShortSell. */
        public enableShortSell: boolean;

        /** SnapshotBasicData shortSellRate. */
        public shortSellRate: number;

        /** SnapshotBasicData shortAvailableVolume. */
        public shortAvailableVolume: (number|Long);

        /** SnapshotBasicData shortMarginInitialRatio. */
        public shortMarginInitialRatio: number;

        /**
         * Creates a new SnapshotBasicData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SnapshotBasicData instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.ISnapshotBasicData): Qot_GetSecuritySnapshot.SnapshotBasicData;

        /**
         * Encodes the specified SnapshotBasicData message. Does not implicitly {@link Qot_GetSecuritySnapshot.SnapshotBasicData.verify|verify} messages.
         * @param message SnapshotBasicData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.ISnapshotBasicData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SnapshotBasicData message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.SnapshotBasicData.verify|verify} messages.
         * @param message SnapshotBasicData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.ISnapshotBasicData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SnapshotBasicData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SnapshotBasicData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.SnapshotBasicData;

        /**
         * Decodes a SnapshotBasicData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SnapshotBasicData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.SnapshotBasicData;

        /**
         * Verifies a SnapshotBasicData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SnapshotBasicData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SnapshotBasicData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.SnapshotBasicData;

        /**
         * Creates a plain object from a SnapshotBasicData message. Also converts values to other types if specified.
         * @param message SnapshotBasicData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.SnapshotBasicData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SnapshotBasicData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Snapshot. */
    interface ISnapshot {

        /** Snapshot basic */
        basic: Qot_GetSecuritySnapshot.ISnapshotBasicData;

        /** Snapshot equityExData */
        equityExData?: (Qot_GetSecuritySnapshot.IEquitySnapshotExData|null);

        /** Snapshot warrantExData */
        warrantExData?: (Qot_GetSecuritySnapshot.IWarrantSnapshotExData|null);

        /** Snapshot optionExData */
        optionExData?: (Qot_GetSecuritySnapshot.IOptionSnapshotExData|null);
    }

    /** Represents a Snapshot. */
    class Snapshot implements ISnapshot {

        /**
         * Constructs a new Snapshot.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.ISnapshot);

        /** Snapshot basic. */
        public basic: Qot_GetSecuritySnapshot.ISnapshotBasicData;

        /** Snapshot equityExData. */
        public equityExData?: (Qot_GetSecuritySnapshot.IEquitySnapshotExData|null);

        /** Snapshot warrantExData. */
        public warrantExData?: (Qot_GetSecuritySnapshot.IWarrantSnapshotExData|null);

        /** Snapshot optionExData. */
        public optionExData?: (Qot_GetSecuritySnapshot.IOptionSnapshotExData|null);

        /**
         * Creates a new Snapshot instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Snapshot instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.ISnapshot): Qot_GetSecuritySnapshot.Snapshot;

        /**
         * Encodes the specified Snapshot message. Does not implicitly {@link Qot_GetSecuritySnapshot.Snapshot.verify|verify} messages.
         * @param message Snapshot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.ISnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Snapshot message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.Snapshot.verify|verify} messages.
         * @param message Snapshot message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.ISnapshot, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Snapshot message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Snapshot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.Snapshot;

        /**
         * Decodes a Snapshot message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Snapshot
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.Snapshot;

        /**
         * Verifies a Snapshot message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Snapshot message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Snapshot
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.Snapshot;

        /**
         * Creates a plain object from a Snapshot message. Also converts values to other types if specified.
         * @param message Snapshot
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.Snapshot, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Snapshot to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C snapshotList */
        snapshotList?: (Qot_GetSecuritySnapshot.ISnapshot[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IS2C);

        /** S2C snapshotList. */
        public snapshotList: Qot_GetSecuritySnapshot.ISnapshot[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IS2C): Qot_GetSecuritySnapshot.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetSecuritySnapshot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetSecuritySnapshot.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetSecuritySnapshot.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IRequest): Qot_GetSecuritySnapshot.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetSecuritySnapshot.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetSecuritySnapshot.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSecuritySnapshot.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetSecuritySnapshot.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetSecuritySnapshot.IResponse): Qot_GetSecuritySnapshot.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetSecuritySnapshot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSecuritySnapshot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetSecuritySnapshot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSecuritySnapshot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSecuritySnapshot.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSecuritySnapshot.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSecuritySnapshot.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSecuritySnapshot.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetStaticInfo. */
export namespace Qot_GetStaticInfo {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S market */
        market?: (number|null);

        /** C2S secType */
        secType?: (number|null);

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetStaticInfo.IC2S);

        /** C2S market. */
        public market: number;

        /** C2S secType. */
        public secType: number;

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetStaticInfo.IC2S): Qot_GetStaticInfo.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetStaticInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetStaticInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetStaticInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetStaticInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetStaticInfo.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetStaticInfo.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetStaticInfo.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetStaticInfo.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C staticInfoList */
        staticInfoList?: (Qot_Common.ISecurityStaticInfo[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetStaticInfo.IS2C);

        /** S2C staticInfoList. */
        public staticInfoList: Qot_Common.ISecurityStaticInfo[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetStaticInfo.IS2C): Qot_GetStaticInfo.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetStaticInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetStaticInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetStaticInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetStaticInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetStaticInfo.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetStaticInfo.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetStaticInfo.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetStaticInfo.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetStaticInfo.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetStaticInfo.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetStaticInfo.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetStaticInfo.IRequest): Qot_GetStaticInfo.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetStaticInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetStaticInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetStaticInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetStaticInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetStaticInfo.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetStaticInfo.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetStaticInfo.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetStaticInfo.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetStaticInfo.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetStaticInfo.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetStaticInfo.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetStaticInfo.IResponse): Qot_GetStaticInfo.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetStaticInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetStaticInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetStaticInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetStaticInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetStaticInfo.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetStaticInfo.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetStaticInfo.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetStaticInfo.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetSubInfo. */
export namespace Qot_GetSubInfo {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S isReqAllConn */
        isReqAllConn?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSubInfo.IC2S);

        /** C2S isReqAllConn. */
        public isReqAllConn: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetSubInfo.IC2S): Qot_GetSubInfo.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetSubInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSubInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetSubInfo.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSubInfo.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSubInfo.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSubInfo.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSubInfo.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSubInfo.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C connSubInfoList */
        connSubInfoList?: (Qot_Common.IConnSubInfo[]|null);

        /** S2C totalUsedQuota */
        totalUsedQuota: number;

        /** S2C remainQuota */
        remainQuota: number;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSubInfo.IS2C);

        /** S2C connSubInfoList. */
        public connSubInfoList: Qot_Common.IConnSubInfo[];

        /** S2C totalUsedQuota. */
        public totalUsedQuota: number;

        /** S2C remainQuota. */
        public remainQuota: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetSubInfo.IS2C): Qot_GetSubInfo.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetSubInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSubInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetSubInfo.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSubInfo.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSubInfo.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSubInfo.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSubInfo.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSubInfo.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetSubInfo.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSubInfo.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetSubInfo.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetSubInfo.IRequest): Qot_GetSubInfo.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetSubInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSubInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetSubInfo.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSubInfo.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSubInfo.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSubInfo.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSubInfo.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSubInfo.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetSubInfo.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSubInfo.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetSubInfo.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetSubInfo.IResponse): Qot_GetSubInfo.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetSubInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSubInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetSubInfo.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSubInfo.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSubInfo.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSubInfo.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSubInfo.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSubInfo.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetSuspend. */
export namespace Qot_GetSuspend {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);

        /** C2S beginTime */
        beginTime: string;

        /** C2S endTime */
        endTime: string;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetSuspend.IC2S): Qot_GetSuspend.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetSuspend.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetSuspend.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Suspend. */
    interface ISuspend {

        /** Suspend time */
        time: string;

        /** Suspend timestamp */
        timestamp?: (number|null);
    }

    /** Represents a Suspend. */
    class Suspend implements ISuspend {

        /**
         * Constructs a new Suspend.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.ISuspend);

        /** Suspend time. */
        public time: string;

        /** Suspend timestamp. */
        public timestamp: number;

        /**
         * Creates a new Suspend instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Suspend instance
         */
        public static create(properties?: Qot_GetSuspend.ISuspend): Qot_GetSuspend.Suspend;

        /**
         * Encodes the specified Suspend message. Does not implicitly {@link Qot_GetSuspend.Suspend.verify|verify} messages.
         * @param message Suspend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.ISuspend, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Suspend message, length delimited. Does not implicitly {@link Qot_GetSuspend.Suspend.verify|verify} messages.
         * @param message Suspend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.ISuspend, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Suspend message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Suspend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.Suspend;

        /**
         * Decodes a Suspend message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Suspend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.Suspend;

        /**
         * Verifies a Suspend message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Suspend message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Suspend
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.Suspend;

        /**
         * Creates a plain object from a Suspend message. Also converts values to other types if specified.
         * @param message Suspend
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.Suspend, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Suspend to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a SecuritySuspend. */
    interface ISecuritySuspend {

        /** SecuritySuspend security */
        security: Qot_Common.ISecurity;

        /** SecuritySuspend suspendList */
        suspendList?: (Qot_GetSuspend.ISuspend[]|null);
    }

    /** Represents a SecuritySuspend. */
    class SecuritySuspend implements ISecuritySuspend {

        /**
         * Constructs a new SecuritySuspend.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.ISecuritySuspend);

        /** SecuritySuspend security. */
        public security: Qot_Common.ISecurity;

        /** SecuritySuspend suspendList. */
        public suspendList: Qot_GetSuspend.ISuspend[];

        /**
         * Creates a new SecuritySuspend instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SecuritySuspend instance
         */
        public static create(properties?: Qot_GetSuspend.ISecuritySuspend): Qot_GetSuspend.SecuritySuspend;

        /**
         * Encodes the specified SecuritySuspend message. Does not implicitly {@link Qot_GetSuspend.SecuritySuspend.verify|verify} messages.
         * @param message SecuritySuspend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.ISecuritySuspend, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SecuritySuspend message, length delimited. Does not implicitly {@link Qot_GetSuspend.SecuritySuspend.verify|verify} messages.
         * @param message SecuritySuspend message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.ISecuritySuspend, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SecuritySuspend message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SecuritySuspend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.SecuritySuspend;

        /**
         * Decodes a SecuritySuspend message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SecuritySuspend
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.SecuritySuspend;

        /**
         * Verifies a SecuritySuspend message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SecuritySuspend message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SecuritySuspend
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.SecuritySuspend;

        /**
         * Creates a plain object from a SecuritySuspend message. Also converts values to other types if specified.
         * @param message SecuritySuspend
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.SecuritySuspend, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SecuritySuspend to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C SecuritySuspendList */
        SecuritySuspendList?: (Qot_GetSuspend.ISecuritySuspend[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.IS2C);

        /** S2C SecuritySuspendList. */
        public SecuritySuspendList: Qot_GetSuspend.ISecuritySuspend[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetSuspend.IS2C): Qot_GetSuspend.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetSuspend.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetSuspend.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetSuspend.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetSuspend.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetSuspend.IRequest): Qot_GetSuspend.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetSuspend.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetSuspend.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetSuspend.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetSuspend.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetSuspend.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetSuspend.IResponse): Qot_GetSuspend.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetSuspend.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetSuspend.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetSuspend.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetSuspend.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetSuspend.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetSuspend.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetSuspend.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetSuspend.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetTicker. */
export namespace Qot_GetTicker {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S maxRetNum */
        maxRetNum: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTicker.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S maxRetNum. */
        public maxRetNum: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetTicker.IC2S): Qot_GetTicker.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetTicker.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTicker.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetTicker.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTicker.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTicker.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTicker.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTicker.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTicker.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C tickerList */
        tickerList?: (Qot_Common.ITicker[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTicker.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C tickerList. */
        public tickerList: Qot_Common.ITicker[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetTicker.IS2C): Qot_GetTicker.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetTicker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTicker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetTicker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTicker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTicker.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTicker.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTicker.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTicker.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetTicker.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTicker.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetTicker.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetTicker.IRequest): Qot_GetTicker.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetTicker.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTicker.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetTicker.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTicker.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTicker.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTicker.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTicker.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTicker.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetTicker.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTicker.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetTicker.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetTicker.IResponse): Qot_GetTicker.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetTicker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTicker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetTicker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTicker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTicker.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTicker.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTicker.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTicker.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetTradeDate. */
export namespace Qot_GetTradeDate {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S market */
        market: number;

        /** C2S beginTime */
        beginTime: string;

        /** C2S endTime */
        endTime: string;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTradeDate.IC2S);

        /** C2S market. */
        public market: number;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetTradeDate.IC2S): Qot_GetTradeDate.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetTradeDate.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTradeDate.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetTradeDate.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTradeDate.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTradeDate.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTradeDate.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTradeDate.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTradeDate.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TradeDate. */
    interface ITradeDate {

        /** TradeDate time */
        time: string;

        /** TradeDate timestamp */
        timestamp?: (number|null);

        /** TradeDate tradeDateType */
        tradeDateType?: (number|null);
    }

    /** Represents a TradeDate. */
    class TradeDate implements ITradeDate {

        /**
         * Constructs a new TradeDate.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTradeDate.ITradeDate);

        /** TradeDate time. */
        public time: string;

        /** TradeDate timestamp. */
        public timestamp: number;

        /** TradeDate tradeDateType. */
        public tradeDateType: number;

        /**
         * Creates a new TradeDate instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TradeDate instance
         */
        public static create(properties?: Qot_GetTradeDate.ITradeDate): Qot_GetTradeDate.TradeDate;

        /**
         * Encodes the specified TradeDate message. Does not implicitly {@link Qot_GetTradeDate.TradeDate.verify|verify} messages.
         * @param message TradeDate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTradeDate.ITradeDate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TradeDate message, length delimited. Does not implicitly {@link Qot_GetTradeDate.TradeDate.verify|verify} messages.
         * @param message TradeDate message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTradeDate.ITradeDate, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TradeDate message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TradeDate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTradeDate.TradeDate;

        /**
         * Decodes a TradeDate message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TradeDate
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTradeDate.TradeDate;

        /**
         * Verifies a TradeDate message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TradeDate message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TradeDate
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTradeDate.TradeDate;

        /**
         * Creates a plain object from a TradeDate message. Also converts values to other types if specified.
         * @param message TradeDate
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTradeDate.TradeDate, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TradeDate to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C tradeDateList */
        tradeDateList?: (Qot_GetTradeDate.ITradeDate[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTradeDate.IS2C);

        /** S2C tradeDateList. */
        public tradeDateList: Qot_GetTradeDate.ITradeDate[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetTradeDate.IS2C): Qot_GetTradeDate.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetTradeDate.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTradeDate.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetTradeDate.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTradeDate.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTradeDate.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTradeDate.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTradeDate.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTradeDate.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetTradeDate.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTradeDate.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetTradeDate.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetTradeDate.IRequest): Qot_GetTradeDate.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetTradeDate.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTradeDate.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetTradeDate.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTradeDate.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTradeDate.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTradeDate.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTradeDate.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTradeDate.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetTradeDate.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetTradeDate.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetTradeDate.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetTradeDate.IResponse): Qot_GetTradeDate.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetTradeDate.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetTradeDate.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetTradeDate.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetTradeDate.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetTradeDate.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetTradeDate.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetTradeDate.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetTradeDate.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_GetWarrant. */
export namespace Qot_GetWarrant {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S begin */
        begin: number;

        /** C2S num */
        num: number;

        /** C2S sortField */
        sortField: number;

        /** C2S ascend */
        ascend: boolean;

        /** C2S owner */
        owner?: (Qot_Common.ISecurity|null);

        /** C2S typeList */
        typeList?: (number[]|null);

        /** C2S issuerList */
        issuerList?: (number[]|null);

        /** C2S maturityTimeMin */
        maturityTimeMin?: (string|null);

        /** C2S maturityTimeMax */
        maturityTimeMax?: (string|null);

        /** C2S ipoPeriod */
        ipoPeriod?: (number|null);

        /** C2S priceType */
        priceType?: (number|null);

        /** C2S status */
        status?: (number|null);

        /** C2S curPriceMin */
        curPriceMin?: (number|null);

        /** C2S curPriceMax */
        curPriceMax?: (number|null);

        /** C2S strikePriceMin */
        strikePriceMin?: (number|null);

        /** C2S strikePriceMax */
        strikePriceMax?: (number|null);

        /** C2S streetMin */
        streetMin?: (number|null);

        /** C2S streetMax */
        streetMax?: (number|null);

        /** C2S conversionMin */
        conversionMin?: (number|null);

        /** C2S conversionMax */
        conversionMax?: (number|null);

        /** C2S volMin */
        volMin?: (number|Long|null);

        /** C2S volMax */
        volMax?: (number|Long|null);

        /** C2S premiumMin */
        premiumMin?: (number|null);

        /** C2S premiumMax */
        premiumMax?: (number|null);

        /** C2S leverageRatioMin */
        leverageRatioMin?: (number|null);

        /** C2S leverageRatioMax */
        leverageRatioMax?: (number|null);

        /** C2S deltaMin */
        deltaMin?: (number|null);

        /** C2S deltaMax */
        deltaMax?: (number|null);

        /** C2S impliedMin */
        impliedMin?: (number|null);

        /** C2S impliedMax */
        impliedMax?: (number|null);

        /** C2S recoveryPriceMin */
        recoveryPriceMin?: (number|null);

        /** C2S recoveryPriceMax */
        recoveryPriceMax?: (number|null);

        /** C2S priceRecoveryRatioMin */
        priceRecoveryRatioMin?: (number|null);

        /** C2S priceRecoveryRatioMax */
        priceRecoveryRatioMax?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetWarrant.IC2S);

        /** C2S begin. */
        public begin: number;

        /** C2S num. */
        public num: number;

        /** C2S sortField. */
        public sortField: number;

        /** C2S ascend. */
        public ascend: boolean;

        /** C2S owner. */
        public owner?: (Qot_Common.ISecurity|null);

        /** C2S typeList. */
        public typeList: number[];

        /** C2S issuerList. */
        public issuerList: number[];

        /** C2S maturityTimeMin. */
        public maturityTimeMin: string;

        /** C2S maturityTimeMax. */
        public maturityTimeMax: string;

        /** C2S ipoPeriod. */
        public ipoPeriod: number;

        /** C2S priceType. */
        public priceType: number;

        /** C2S status. */
        public status: number;

        /** C2S curPriceMin. */
        public curPriceMin: number;

        /** C2S curPriceMax. */
        public curPriceMax: number;

        /** C2S strikePriceMin. */
        public strikePriceMin: number;

        /** C2S strikePriceMax. */
        public strikePriceMax: number;

        /** C2S streetMin. */
        public streetMin: number;

        /** C2S streetMax. */
        public streetMax: number;

        /** C2S conversionMin. */
        public conversionMin: number;

        /** C2S conversionMax. */
        public conversionMax: number;

        /** C2S volMin. */
        public volMin: (number|Long);

        /** C2S volMax. */
        public volMax: (number|Long);

        /** C2S premiumMin. */
        public premiumMin: number;

        /** C2S premiumMax. */
        public premiumMax: number;

        /** C2S leverageRatioMin. */
        public leverageRatioMin: number;

        /** C2S leverageRatioMax. */
        public leverageRatioMax: number;

        /** C2S deltaMin. */
        public deltaMin: number;

        /** C2S deltaMax. */
        public deltaMax: number;

        /** C2S impliedMin. */
        public impliedMin: number;

        /** C2S impliedMax. */
        public impliedMax: number;

        /** C2S recoveryPriceMin. */
        public recoveryPriceMin: number;

        /** C2S recoveryPriceMax. */
        public recoveryPriceMax: number;

        /** C2S priceRecoveryRatioMin. */
        public priceRecoveryRatioMin: number;

        /** C2S priceRecoveryRatioMax. */
        public priceRecoveryRatioMax: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_GetWarrant.IC2S): Qot_GetWarrant.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_GetWarrant.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetWarrant.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_GetWarrant.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetWarrant.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetWarrant.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetWarrant.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetWarrant.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetWarrant.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a WarrantData. */
    interface IWarrantData {

        /** WarrantData stock */
        stock: Qot_Common.ISecurity;

        /** WarrantData owner */
        owner: Qot_Common.ISecurity;

        /** WarrantData type */
        type: number;

        /** WarrantData issuer */
        issuer: number;

        /** WarrantData maturityTime */
        maturityTime: string;

        /** WarrantData maturityTimestamp */
        maturityTimestamp?: (number|null);

        /** WarrantData listTime */
        listTime: string;

        /** WarrantData listTimestamp */
        listTimestamp?: (number|null);

        /** WarrantData lastTradeTime */
        lastTradeTime: string;

        /** WarrantData lastTradeTimestamp */
        lastTradeTimestamp?: (number|null);

        /** WarrantData recoveryPrice */
        recoveryPrice?: (number|null);

        /** WarrantData conversionRatio */
        conversionRatio: number;

        /** WarrantData lotSize */
        lotSize: number;

        /** WarrantData strikePrice */
        strikePrice: number;

        /** WarrantData lastClosePrice */
        lastClosePrice: number;

        /** WarrantData name */
        name: string;

        /** WarrantData curPrice */
        curPrice: number;

        /** WarrantData priceChangeVal */
        priceChangeVal: number;

        /** WarrantData changeRate */
        changeRate: number;

        /** WarrantData status */
        status: number;

        /** WarrantData bidPrice */
        bidPrice: number;

        /** WarrantData askPrice */
        askPrice: number;

        /** WarrantData bidVol */
        bidVol: (number|Long);

        /** WarrantData askVol */
        askVol: (number|Long);

        /** WarrantData volume */
        volume: (number|Long);

        /** WarrantData turnover */
        turnover: number;

        /** WarrantData score */
        score: number;

        /** WarrantData premium */
        premium: number;

        /** WarrantData breakEvenPoint */
        breakEvenPoint: number;

        /** WarrantData leverage */
        leverage: number;

        /** WarrantData ipop */
        ipop: number;

        /** WarrantData priceRecoveryRatio */
        priceRecoveryRatio?: (number|null);

        /** WarrantData conversionPrice */
        conversionPrice: number;

        /** WarrantData streetRate */
        streetRate: number;

        /** WarrantData streetVol */
        streetVol: (number|Long);

        /** WarrantData amplitude */
        amplitude: number;

        /** WarrantData issueSize */
        issueSize: (number|Long);

        /** WarrantData highPrice */
        highPrice: number;

        /** WarrantData lowPrice */
        lowPrice: number;

        /** WarrantData impliedVolatility */
        impliedVolatility?: (number|null);

        /** WarrantData delta */
        delta?: (number|null);

        /** WarrantData effectiveLeverage */
        effectiveLeverage: number;
    }

    /** Represents a WarrantData. */
    class WarrantData implements IWarrantData {

        /**
         * Constructs a new WarrantData.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetWarrant.IWarrantData);

        /** WarrantData stock. */
        public stock: Qot_Common.ISecurity;

        /** WarrantData owner. */
        public owner: Qot_Common.ISecurity;

        /** WarrantData type. */
        public type: number;

        /** WarrantData issuer. */
        public issuer: number;

        /** WarrantData maturityTime. */
        public maturityTime: string;

        /** WarrantData maturityTimestamp. */
        public maturityTimestamp: number;

        /** WarrantData listTime. */
        public listTime: string;

        /** WarrantData listTimestamp. */
        public listTimestamp: number;

        /** WarrantData lastTradeTime. */
        public lastTradeTime: string;

        /** WarrantData lastTradeTimestamp. */
        public lastTradeTimestamp: number;

        /** WarrantData recoveryPrice. */
        public recoveryPrice: number;

        /** WarrantData conversionRatio. */
        public conversionRatio: number;

        /** WarrantData lotSize. */
        public lotSize: number;

        /** WarrantData strikePrice. */
        public strikePrice: number;

        /** WarrantData lastClosePrice. */
        public lastClosePrice: number;

        /** WarrantData name. */
        public name: string;

        /** WarrantData curPrice. */
        public curPrice: number;

        /** WarrantData priceChangeVal. */
        public priceChangeVal: number;

        /** WarrantData changeRate. */
        public changeRate: number;

        /** WarrantData status. */
        public status: number;

        /** WarrantData bidPrice. */
        public bidPrice: number;

        /** WarrantData askPrice. */
        public askPrice: number;

        /** WarrantData bidVol. */
        public bidVol: (number|Long);

        /** WarrantData askVol. */
        public askVol: (number|Long);

        /** WarrantData volume. */
        public volume: (number|Long);

        /** WarrantData turnover. */
        public turnover: number;

        /** WarrantData score. */
        public score: number;

        /** WarrantData premium. */
        public premium: number;

        /** WarrantData breakEvenPoint. */
        public breakEvenPoint: number;

        /** WarrantData leverage. */
        public leverage: number;

        /** WarrantData ipop. */
        public ipop: number;

        /** WarrantData priceRecoveryRatio. */
        public priceRecoveryRatio: number;

        /** WarrantData conversionPrice. */
        public conversionPrice: number;

        /** WarrantData streetRate. */
        public streetRate: number;

        /** WarrantData streetVol. */
        public streetVol: (number|Long);

        /** WarrantData amplitude. */
        public amplitude: number;

        /** WarrantData issueSize. */
        public issueSize: (number|Long);

        /** WarrantData highPrice. */
        public highPrice: number;

        /** WarrantData lowPrice. */
        public lowPrice: number;

        /** WarrantData impliedVolatility. */
        public impliedVolatility: number;

        /** WarrantData delta. */
        public delta: number;

        /** WarrantData effectiveLeverage. */
        public effectiveLeverage: number;

        /**
         * Creates a new WarrantData instance using the specified properties.
         * @param [properties] Properties to set
         * @returns WarrantData instance
         */
        public static create(properties?: Qot_GetWarrant.IWarrantData): Qot_GetWarrant.WarrantData;

        /**
         * Encodes the specified WarrantData message. Does not implicitly {@link Qot_GetWarrant.WarrantData.verify|verify} messages.
         * @param message WarrantData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetWarrant.IWarrantData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified WarrantData message, length delimited. Does not implicitly {@link Qot_GetWarrant.WarrantData.verify|verify} messages.
         * @param message WarrantData message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetWarrant.IWarrantData, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a WarrantData message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns WarrantData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetWarrant.WarrantData;

        /**
         * Decodes a WarrantData message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns WarrantData
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetWarrant.WarrantData;

        /**
         * Verifies a WarrantData message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a WarrantData message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns WarrantData
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetWarrant.WarrantData;

        /**
         * Creates a plain object from a WarrantData message. Also converts values to other types if specified.
         * @param message WarrantData
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetWarrant.WarrantData, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this WarrantData to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C lastPage */
        lastPage: boolean;

        /** S2C allCount */
        allCount: number;

        /** S2C warrantDataList */
        warrantDataList?: (Qot_GetWarrant.IWarrantData[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetWarrant.IS2C);

        /** S2C lastPage. */
        public lastPage: boolean;

        /** S2C allCount. */
        public allCount: number;

        /** S2C warrantDataList. */
        public warrantDataList: Qot_GetWarrant.IWarrantData[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_GetWarrant.IS2C): Qot_GetWarrant.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_GetWarrant.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetWarrant.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_GetWarrant.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetWarrant.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetWarrant.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetWarrant.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetWarrant.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetWarrant.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_GetWarrant.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetWarrant.IRequest);

        /** Request c2s. */
        public c2s: Qot_GetWarrant.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_GetWarrant.IRequest): Qot_GetWarrant.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_GetWarrant.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetWarrant.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_GetWarrant.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetWarrant.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetWarrant.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetWarrant.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetWarrant.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetWarrant.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_GetWarrant.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_GetWarrant.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_GetWarrant.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_GetWarrant.IResponse): Qot_GetWarrant.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_GetWarrant.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_GetWarrant.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_GetWarrant.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_GetWarrant.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_GetWarrant.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_GetWarrant.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_GetWarrant.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_GetWarrant.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_RegQotPush. */
export namespace Qot_RegQotPush {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);

        /** C2S subTypeList */
        subTypeList?: (number[]|null);

        /** C2S rehabTypeList */
        rehabTypeList?: (number[]|null);

        /** C2S isRegOrUnReg */
        isRegOrUnReg: boolean;

        /** C2S isFirstPush */
        isFirstPush?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RegQotPush.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /** C2S subTypeList. */
        public subTypeList: number[];

        /** C2S rehabTypeList. */
        public rehabTypeList: number[];

        /** C2S isRegOrUnReg. */
        public isRegOrUnReg: boolean;

        /** C2S isFirstPush. */
        public isFirstPush: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_RegQotPush.IC2S): Qot_RegQotPush.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_RegQotPush.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RegQotPush.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_RegQotPush.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RegQotPush.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RegQotPush.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RegQotPush.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_RegQotPush.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RegQotPush.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RegQotPush.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_RegQotPush.IS2C): Qot_RegQotPush.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_RegQotPush.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RegQotPush.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_RegQotPush.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RegQotPush.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RegQotPush.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RegQotPush.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_RegQotPush.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RegQotPush.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_RegQotPush.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RegQotPush.IRequest);

        /** Request c2s. */
        public c2s: Qot_RegQotPush.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_RegQotPush.IRequest): Qot_RegQotPush.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_RegQotPush.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RegQotPush.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_RegQotPush.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RegQotPush.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RegQotPush.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RegQotPush.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_RegQotPush.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RegQotPush.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_RegQotPush.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RegQotPush.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_RegQotPush.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_RegQotPush.IResponse): Qot_RegQotPush.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_RegQotPush.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RegQotPush.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_RegQotPush.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RegQotPush.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RegQotPush.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RegQotPush.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_RegQotPush.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RegQotPush.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_RequestHistoryKL. */
export namespace Qot_RequestHistoryKL {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S rehabType */
        rehabType: number;

        /** C2S klType */
        klType: number;

        /** C2S security */
        security: Qot_Common.ISecurity;

        /** C2S beginTime */
        beginTime: string;

        /** C2S endTime */
        endTime: string;

        /** C2S maxAckKLNum */
        maxAckKLNum?: (number|null);

        /** C2S needKLFieldsFlag */
        needKLFieldsFlag?: (number|Long|null);

        /** C2S nextReqKey */
        nextReqKey?: (Uint8Array|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKL.IC2S);

        /** C2S rehabType. */
        public rehabType: number;

        /** C2S klType. */
        public klType: number;

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /** C2S beginTime. */
        public beginTime: string;

        /** C2S endTime. */
        public endTime: string;

        /** C2S maxAckKLNum. */
        public maxAckKLNum: number;

        /** C2S needKLFieldsFlag. */
        public needKLFieldsFlag: (number|Long);

        /** C2S nextReqKey. */
        public nextReqKey: Uint8Array;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_RequestHistoryKL.IC2S): Qot_RequestHistoryKL.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_RequestHistoryKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_RequestHistoryKL.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKL.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKL.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKL.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKL.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKL.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C klList */
        klList?: (Qot_Common.IKLine[]|null);

        /** S2C nextReqKey */
        nextReqKey?: (Uint8Array|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKL.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C klList. */
        public klList: Qot_Common.IKLine[];

        /** S2C nextReqKey. */
        public nextReqKey: Uint8Array;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_RequestHistoryKL.IS2C): Qot_RequestHistoryKL.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_RequestHistoryKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_RequestHistoryKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKL.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKL.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKL.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKL.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_RequestHistoryKL.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKL.IRequest);

        /** Request c2s. */
        public c2s: Qot_RequestHistoryKL.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_RequestHistoryKL.IRequest): Qot_RequestHistoryKL.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_RequestHistoryKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_RequestHistoryKL.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKL.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKL.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKL.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKL.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKL.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_RequestHistoryKL.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKL.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_RequestHistoryKL.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_RequestHistoryKL.IResponse): Qot_RequestHistoryKL.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_RequestHistoryKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_RequestHistoryKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKL.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKL.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKL.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKL.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_RequestHistoryKLQuota. */
export namespace Qot_RequestHistoryKLQuota {

    /** Properties of a DetailItem. */
    interface IDetailItem {

        /** DetailItem security */
        security: Qot_Common.ISecurity;

        /** DetailItem requestTime */
        requestTime: string;

        /** DetailItem requestTimeStamp */
        requestTimeStamp?: (number|Long|null);
    }

    /** Represents a DetailItem. */
    class DetailItem implements IDetailItem {

        /**
         * Constructs a new DetailItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKLQuota.IDetailItem);

        /** DetailItem security. */
        public security: Qot_Common.ISecurity;

        /** DetailItem requestTime. */
        public requestTime: string;

        /** DetailItem requestTimeStamp. */
        public requestTimeStamp: (number|Long);

        /**
         * Creates a new DetailItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DetailItem instance
         */
        public static create(properties?: Qot_RequestHistoryKLQuota.IDetailItem): Qot_RequestHistoryKLQuota.DetailItem;

        /**
         * Encodes the specified DetailItem message. Does not implicitly {@link Qot_RequestHistoryKLQuota.DetailItem.verify|verify} messages.
         * @param message DetailItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKLQuota.IDetailItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DetailItem message, length delimited. Does not implicitly {@link Qot_RequestHistoryKLQuota.DetailItem.verify|verify} messages.
         * @param message DetailItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKLQuota.IDetailItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DetailItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DetailItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKLQuota.DetailItem;

        /**
         * Decodes a DetailItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DetailItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKLQuota.DetailItem;

        /**
         * Verifies a DetailItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DetailItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DetailItem
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKLQuota.DetailItem;

        /**
         * Creates a plain object from a DetailItem message. Also converts values to other types if specified.
         * @param message DetailItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKLQuota.DetailItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DetailItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S bGetDetail */
        bGetDetail?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKLQuota.IC2S);

        /** C2S bGetDetail. */
        public bGetDetail: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_RequestHistoryKLQuota.IC2S): Qot_RequestHistoryKLQuota.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_RequestHistoryKLQuota.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKLQuota.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_RequestHistoryKLQuota.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKLQuota.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKLQuota.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKLQuota.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKLQuota.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKLQuota.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C usedQuota */
        usedQuota: number;

        /** S2C remainQuota */
        remainQuota: number;

        /** S2C detailList */
        detailList?: (Qot_RequestHistoryKLQuota.IDetailItem[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKLQuota.IS2C);

        /** S2C usedQuota. */
        public usedQuota: number;

        /** S2C remainQuota. */
        public remainQuota: number;

        /** S2C detailList. */
        public detailList: Qot_RequestHistoryKLQuota.IDetailItem[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_RequestHistoryKLQuota.IS2C): Qot_RequestHistoryKLQuota.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_RequestHistoryKLQuota.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKLQuota.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_RequestHistoryKLQuota.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKLQuota.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKLQuota.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKLQuota.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKLQuota.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKLQuota.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_RequestHistoryKLQuota.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKLQuota.IRequest);

        /** Request c2s. */
        public c2s: Qot_RequestHistoryKLQuota.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_RequestHistoryKLQuota.IRequest): Qot_RequestHistoryKLQuota.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_RequestHistoryKLQuota.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKLQuota.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_RequestHistoryKLQuota.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKLQuota.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKLQuota.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKLQuota.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKLQuota.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKLQuota.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_RequestHistoryKLQuota.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestHistoryKLQuota.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_RequestHistoryKLQuota.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_RequestHistoryKLQuota.IResponse): Qot_RequestHistoryKLQuota.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_RequestHistoryKLQuota.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestHistoryKLQuota.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_RequestHistoryKLQuota.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestHistoryKLQuota.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestHistoryKLQuota.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestHistoryKLQuota.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestHistoryKLQuota.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestHistoryKLQuota.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_RequestRehab. */
export namespace Qot_RequestRehab {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S security */
        security: Qot_Common.ISecurity;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestRehab.IC2S);

        /** C2S security. */
        public security: Qot_Common.ISecurity;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_RequestRehab.IC2S): Qot_RequestRehab.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_RequestRehab.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestRehab.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_RequestRehab.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestRehab.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestRehab.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestRehab.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestRehab.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestRehab.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C rehabList */
        rehabList?: (Qot_Common.IRehab[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestRehab.IS2C);

        /** S2C rehabList. */
        public rehabList: Qot_Common.IRehab[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_RequestRehab.IS2C): Qot_RequestRehab.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_RequestRehab.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestRehab.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_RequestRehab.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestRehab.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestRehab.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestRehab.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestRehab.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestRehab.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_RequestRehab.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestRehab.IRequest);

        /** Request c2s. */
        public c2s: Qot_RequestRehab.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_RequestRehab.IRequest): Qot_RequestRehab.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_RequestRehab.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestRehab.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_RequestRehab.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestRehab.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestRehab.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestRehab.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestRehab.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestRehab.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_RequestRehab.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_RequestRehab.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_RequestRehab.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_RequestRehab.IResponse): Qot_RequestRehab.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_RequestRehab.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_RequestRehab.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_RequestRehab.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_RequestRehab.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_RequestRehab.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_RequestRehab.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_RequestRehab.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_RequestRehab.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_Sub. */
export namespace Qot_Sub {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S securityList */
        securityList?: (Qot_Common.ISecurity[]|null);

        /** C2S subTypeList */
        subTypeList?: (number[]|null);

        /** C2S isSubOrUnSub */
        isSubOrUnSub: boolean;

        /** C2S isRegOrUnRegPush */
        isRegOrUnRegPush?: (boolean|null);

        /** C2S regPushRehabTypeList */
        regPushRehabTypeList?: (number[]|null);

        /** C2S isFirstPush */
        isFirstPush?: (boolean|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Sub.IC2S);

        /** C2S securityList. */
        public securityList: Qot_Common.ISecurity[];

        /** C2S subTypeList. */
        public subTypeList: number[];

        /** C2S isSubOrUnSub. */
        public isSubOrUnSub: boolean;

        /** C2S isRegOrUnRegPush. */
        public isRegOrUnRegPush: boolean;

        /** C2S regPushRehabTypeList. */
        public regPushRehabTypeList: number[];

        /** C2S isFirstPush. */
        public isFirstPush: boolean;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Qot_Sub.IC2S): Qot_Sub.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Qot_Sub.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Sub.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Qot_Sub.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Sub.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Sub.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Sub.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Qot_Sub.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Sub.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Sub.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_Sub.IS2C): Qot_Sub.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_Sub.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Sub.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_Sub.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Sub.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Sub.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Sub.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_Sub.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Sub.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Qot_Sub.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Sub.IRequest);

        /** Request c2s. */
        public c2s: Qot_Sub.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Qot_Sub.IRequest): Qot_Sub.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Qot_Sub.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Sub.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Qot_Sub.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Sub.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Sub.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Sub.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Qot_Sub.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Sub.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_Sub.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_Sub.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_Sub.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_Sub.IResponse): Qot_Sub.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_Sub.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_Sub.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_Sub.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_Sub.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_Sub.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_Sub.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_Sub.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_Sub.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_UpdateBasicQot. */
export namespace Qot_UpdateBasicQot {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C basicQotList */
        basicQotList?: (Qot_Common.IBasicQot[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateBasicQot.IS2C);

        /** S2C basicQotList. */
        public basicQotList: Qot_Common.IBasicQot[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateBasicQot.IS2C): Qot_UpdateBasicQot.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateBasicQot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateBasicQot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateBasicQot.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateBasicQot.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateBasicQot.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateBasicQot.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateBasicQot.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateBasicQot.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateBasicQot.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateBasicQot.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateBasicQot.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateBasicQot.IResponse): Qot_UpdateBasicQot.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateBasicQot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateBasicQot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateBasicQot.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateBasicQot.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateBasicQot.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateBasicQot.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateBasicQot.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateBasicQot.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_UpdateBroker. */
export namespace Qot_UpdateBroker {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C brokerAskList */
        brokerAskList?: (Qot_Common.IBroker[]|null);

        /** S2C brokerBidList */
        brokerBidList?: (Qot_Common.IBroker[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateBroker.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C brokerAskList. */
        public brokerAskList: Qot_Common.IBroker[];

        /** S2C brokerBidList. */
        public brokerBidList: Qot_Common.IBroker[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateBroker.IS2C): Qot_UpdateBroker.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateBroker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateBroker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateBroker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateBroker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateBroker.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateBroker.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateBroker.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateBroker.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateBroker.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateBroker.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateBroker.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateBroker.IResponse): Qot_UpdateBroker.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateBroker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateBroker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateBroker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateBroker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateBroker.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateBroker.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateBroker.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateBroker.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_UpdateKL. */
export namespace Qot_UpdateKL {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C rehabType */
        rehabType: number;

        /** S2C klType */
        klType: number;

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C klList */
        klList?: (Qot_Common.IKLine[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateKL.IS2C);

        /** S2C rehabType. */
        public rehabType: number;

        /** S2C klType. */
        public klType: number;

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C klList. */
        public klList: Qot_Common.IKLine[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateKL.IS2C): Qot_UpdateKL.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateKL.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateKL.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateKL.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateKL.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateKL.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateKL.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateKL.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateKL.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateKL.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateKL.IResponse): Qot_UpdateKL.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateKL.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateKL.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateKL.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateKL.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateKL.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateKL.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_UpdateOrderBook. */
export namespace Qot_UpdateOrderBook {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C orderBookAskList */
        orderBookAskList?: (Qot_Common.IOrderBook[]|null);

        /** S2C orderBookBidList */
        orderBookBidList?: (Qot_Common.IOrderBook[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateOrderBook.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C orderBookAskList. */
        public orderBookAskList: Qot_Common.IOrderBook[];

        /** S2C orderBookBidList. */
        public orderBookBidList: Qot_Common.IOrderBook[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateOrderBook.IS2C): Qot_UpdateOrderBook.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateOrderBook.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateOrderBook.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateOrderBook.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateOrderBook.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateOrderBook.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateOrderBook.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateOrderBook.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateOrderBook.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateOrderBook.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateOrderBook.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateOrderBook.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateOrderBook.IResponse): Qot_UpdateOrderBook.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateOrderBook.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateOrderBook.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateOrderBook.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateOrderBook.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateOrderBook.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateOrderBook.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateOrderBook.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateOrderBook.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_UpdateOrderDetail. */
export namespace Qot_UpdateOrderDetail {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C orderDetailAsk */
        orderDetailAsk: Qot_Common.IOrderDetail;

        /** S2C orderDetailBid */
        orderDetailBid: Qot_Common.IOrderDetail;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateOrderDetail.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C orderDetailAsk. */
        public orderDetailAsk: Qot_Common.IOrderDetail;

        /** S2C orderDetailBid. */
        public orderDetailBid: Qot_Common.IOrderDetail;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateOrderDetail.IS2C): Qot_UpdateOrderDetail.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateOrderDetail.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateOrderDetail.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateOrderDetail.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateOrderDetail.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateOrderDetail.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateOrderDetail.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateOrderDetail.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateOrderDetail.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateOrderDetail.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateOrderDetail.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateOrderDetail.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateOrderDetail.IResponse): Qot_UpdateOrderDetail.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateOrderDetail.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateOrderDetail.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateOrderDetail.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateOrderDetail.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateOrderDetail.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateOrderDetail.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateOrderDetail.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateOrderDetail.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_UpdateRT. */
export namespace Qot_UpdateRT {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C rtList */
        rtList?: (Qot_Common.ITimeShare[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateRT.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C rtList. */
        public rtList: Qot_Common.ITimeShare[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateRT.IS2C): Qot_UpdateRT.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateRT.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateRT.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateRT.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateRT.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateRT.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateRT.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateRT.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateRT.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateRT.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateRT.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateRT.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateRT.IResponse): Qot_UpdateRT.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateRT.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateRT.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateRT.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateRT.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateRT.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateRT.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateRT.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateRT.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Qot_UpdateTicker. */
export namespace Qot_UpdateTicker {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C security */
        security: Qot_Common.ISecurity;

        /** S2C tickerList */
        tickerList?: (Qot_Common.ITicker[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateTicker.IS2C);

        /** S2C security. */
        public security: Qot_Common.ISecurity;

        /** S2C tickerList. */
        public tickerList: Qot_Common.ITicker[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Qot_UpdateTicker.IS2C): Qot_UpdateTicker.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Qot_UpdateTicker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateTicker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Qot_UpdateTicker.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateTicker.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateTicker.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateTicker.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateTicker.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateTicker.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Qot_UpdateTicker.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Qot_UpdateTicker.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Qot_UpdateTicker.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Qot_UpdateTicker.IResponse): Qot_UpdateTicker.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Qot_UpdateTicker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Qot_UpdateTicker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Qot_UpdateTicker.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Qot_UpdateTicker.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Qot_UpdateTicker.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Qot_UpdateTicker.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Qot_UpdateTicker.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Qot_UpdateTicker.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_Common. */
export namespace Trd_Common {

    /** TrdEnv enum. */
    enum TrdEnv {
        TrdEnv_Simulate = 0,
        TrdEnv_Real = 1
    }

    /** TrdMarket enum. */
    enum TrdMarket {
        TrdMarket_Unknown = 0,
        TrdMarket_HK = 1,
        TrdMarket_US = 2,
        TrdMarket_CN = 3,
        TrdMarket_HKCC = 4
    }

    /** TrdSecMarket enum. */
    enum TrdSecMarket {
        TrdSecMarket_Unknown = 0,
        TrdSecMarket_HK = 1,
        TrdSecMarket_US = 2,
        TrdSecMarket_CN_SH = 31,
        TrdSecMarket_CN_SZ = 32
    }

    /** TrdSide enum. */
    enum TrdSide {
        TrdSide_Unknown = 0,
        TrdSide_Buy = 1,
        TrdSide_Sell = 2,
        TrdSide_SellShort = 3,
        TrdSide_BuyBack = 4
    }

    /** OrderType enum. */
    enum OrderType {
        OrderType_Unknown = 0,
        OrderType_Normal = 1,
        OrderType_Market = 2,
        OrderType_AbsoluteLimit = 5,
        OrderType_Auction = 6,
        OrderType_AuctionLimit = 7,
        OrderType_SpecialLimit = 8
    }

    /** OrderStatus enum. */
    enum OrderStatus {
        OrderStatus_Unsubmitted = 0,
        OrderStatus_Unknown = -1,
        OrderStatus_WaitingSubmit = 1,
        OrderStatus_Submitting = 2,
        OrderStatus_SubmitFailed = 3,
        OrderStatus_TimeOut = 4,
        OrderStatus_Submitted = 5,
        OrderStatus_Filled_Part = 10,
        OrderStatus_Filled_All = 11,
        OrderStatus_Cancelling_Part = 12,
        OrderStatus_Cancelling_All = 13,
        OrderStatus_Cancelled_Part = 14,
        OrderStatus_Cancelled_All = 15,
        OrderStatus_Failed = 21,
        OrderStatus_Disabled = 22,
        OrderStatus_Deleted = 23
    }

    /** PositionSide enum. */
    enum PositionSide {
        PositionSide_Long = 0,
        PositionSide_Unknown = -1,
        PositionSide_Short = 1
    }

    /** ModifyOrderOp enum. */
    enum ModifyOrderOp {
        ModifyOrderOp_Unknown = 0,
        ModifyOrderOp_Normal = 1,
        ModifyOrderOp_Cancel = 2,
        ModifyOrderOp_Disable = 3,
        ModifyOrderOp_Enable = 4,
        ModifyOrderOp_Delete = 5
    }

    /** ReconfirmOrderReason enum. */
    enum ReconfirmOrderReason {
        ReconfirmOrderReason_Unknown = 0,
        ReconfirmOrderReason_QtyTooLarge = 1,
        ReconfirmOrderReason_PriceAbnormal = 2
    }

    /** Properties of a TrdHeader. */
    interface ITrdHeader {

        /** TrdHeader trdEnv */
        trdEnv: number;

        /** TrdHeader accID */
        accID: (number|Long);

        /** TrdHeader trdMarket */
        trdMarket: number;
    }

    /** Represents a TrdHeader. */
    class TrdHeader implements ITrdHeader {

        /**
         * Constructs a new TrdHeader.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.ITrdHeader);

        /** TrdHeader trdEnv. */
        public trdEnv: number;

        /** TrdHeader accID. */
        public accID: (number|Long);

        /** TrdHeader trdMarket. */
        public trdMarket: number;

        /**
         * Creates a new TrdHeader instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrdHeader instance
         */
        public static create(properties?: Trd_Common.ITrdHeader): Trd_Common.TrdHeader;

        /**
         * Encodes the specified TrdHeader message. Does not implicitly {@link Trd_Common.TrdHeader.verify|verify} messages.
         * @param message TrdHeader message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.ITrdHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrdHeader message, length delimited. Does not implicitly {@link Trd_Common.TrdHeader.verify|verify} messages.
         * @param message TrdHeader message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.ITrdHeader, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrdHeader message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrdHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.TrdHeader;

        /**
         * Decodes a TrdHeader message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrdHeader
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.TrdHeader;

        /**
         * Verifies a TrdHeader message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrdHeader message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrdHeader
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.TrdHeader;

        /**
         * Creates a plain object from a TrdHeader message. Also converts values to other types if specified.
         * @param message TrdHeader
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.TrdHeader, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrdHeader to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrdAcc. */
    interface ITrdAcc {

        /** TrdAcc trdEnv */
        trdEnv: number;

        /** TrdAcc accID */
        accID: (number|Long);

        /** TrdAcc trdMarketAuthList */
        trdMarketAuthList?: (number[]|null);
    }

    /** Represents a TrdAcc. */
    class TrdAcc implements ITrdAcc {

        /**
         * Constructs a new TrdAcc.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.ITrdAcc);

        /** TrdAcc trdEnv. */
        public trdEnv: number;

        /** TrdAcc accID. */
        public accID: (number|Long);

        /** TrdAcc trdMarketAuthList. */
        public trdMarketAuthList: number[];

        /**
         * Creates a new TrdAcc instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrdAcc instance
         */
        public static create(properties?: Trd_Common.ITrdAcc): Trd_Common.TrdAcc;

        /**
         * Encodes the specified TrdAcc message. Does not implicitly {@link Trd_Common.TrdAcc.verify|verify} messages.
         * @param message TrdAcc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.ITrdAcc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrdAcc message, length delimited. Does not implicitly {@link Trd_Common.TrdAcc.verify|verify} messages.
         * @param message TrdAcc message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.ITrdAcc, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrdAcc message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrdAcc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.TrdAcc;

        /**
         * Decodes a TrdAcc message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrdAcc
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.TrdAcc;

        /**
         * Verifies a TrdAcc message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrdAcc message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrdAcc
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.TrdAcc;

        /**
         * Creates a plain object from a TrdAcc message. Also converts values to other types if specified.
         * @param message TrdAcc
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.TrdAcc, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrdAcc to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Funds. */
    interface IFunds {

        /** Funds power */
        power: number;

        /** Funds totalAssets */
        totalAssets: number;

        /** Funds cash */
        cash: number;

        /** Funds marketVal */
        marketVal: number;

        /** Funds frozenCash */
        frozenCash: number;

        /** Funds debtCash */
        debtCash: number;

        /** Funds avlWithdrawalCash */
        avlWithdrawalCash: number;
    }

    /** Represents a Funds. */
    class Funds implements IFunds {

        /**
         * Constructs a new Funds.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IFunds);

        /** Funds power. */
        public power: number;

        /** Funds totalAssets. */
        public totalAssets: number;

        /** Funds cash. */
        public cash: number;

        /** Funds marketVal. */
        public marketVal: number;

        /** Funds frozenCash. */
        public frozenCash: number;

        /** Funds debtCash. */
        public debtCash: number;

        /** Funds avlWithdrawalCash. */
        public avlWithdrawalCash: number;

        /**
         * Creates a new Funds instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Funds instance
         */
        public static create(properties?: Trd_Common.IFunds): Trd_Common.Funds;

        /**
         * Encodes the specified Funds message. Does not implicitly {@link Trd_Common.Funds.verify|verify} messages.
         * @param message Funds message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IFunds, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Funds message, length delimited. Does not implicitly {@link Trd_Common.Funds.verify|verify} messages.
         * @param message Funds message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IFunds, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Funds message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Funds
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.Funds;

        /**
         * Decodes a Funds message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Funds
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.Funds;

        /**
         * Verifies a Funds message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Funds message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Funds
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.Funds;

        /**
         * Creates a plain object from a Funds message. Also converts values to other types if specified.
         * @param message Funds
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.Funds, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Funds to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Position. */
    interface IPosition {

        /** Position positionID */
        positionID: (number|Long);

        /** Position positionSide */
        positionSide: number;

        /** Position code */
        code: string;

        /** Position name */
        name: string;

        /** Position qty */
        qty: number;

        /** Position canSellQty */
        canSellQty: number;

        /** Position price */
        price: number;

        /** Position costPrice */
        costPrice?: (number|null);

        /** Position val */
        val: number;

        /** Position plVal */
        plVal: number;

        /** Position plRatio */
        plRatio?: (number|null);

        /** Position secMarket */
        secMarket?: (number|null);

        /** Position tdPlVal */
        tdPlVal?: (number|null);

        /** Position tdTrdVal */
        tdTrdVal?: (number|null);

        /** Position tdBuyVal */
        tdBuyVal?: (number|null);

        /** Position tdBuyQty */
        tdBuyQty?: (number|null);

        /** Position tdSellVal */
        tdSellVal?: (number|null);

        /** Position tdSellQty */
        tdSellQty?: (number|null);
    }

    /** Represents a Position. */
    class Position implements IPosition {

        /**
         * Constructs a new Position.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IPosition);

        /** Position positionID. */
        public positionID: (number|Long);

        /** Position positionSide. */
        public positionSide: number;

        /** Position code. */
        public code: string;

        /** Position name. */
        public name: string;

        /** Position qty. */
        public qty: number;

        /** Position canSellQty. */
        public canSellQty: number;

        /** Position price. */
        public price: number;

        /** Position costPrice. */
        public costPrice: number;

        /** Position val. */
        public val: number;

        /** Position plVal. */
        public plVal: number;

        /** Position plRatio. */
        public plRatio: number;

        /** Position secMarket. */
        public secMarket: number;

        /** Position tdPlVal. */
        public tdPlVal: number;

        /** Position tdTrdVal. */
        public tdTrdVal: number;

        /** Position tdBuyVal. */
        public tdBuyVal: number;

        /** Position tdBuyQty. */
        public tdBuyQty: number;

        /** Position tdSellVal. */
        public tdSellVal: number;

        /** Position tdSellQty. */
        public tdSellQty: number;

        /**
         * Creates a new Position instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Position instance
         */
        public static create(properties?: Trd_Common.IPosition): Trd_Common.Position;

        /**
         * Encodes the specified Position message. Does not implicitly {@link Trd_Common.Position.verify|verify} messages.
         * @param message Position message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IPosition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Position message, length delimited. Does not implicitly {@link Trd_Common.Position.verify|verify} messages.
         * @param message Position message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IPosition, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Position message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Position
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.Position;

        /**
         * Decodes a Position message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Position
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.Position;

        /**
         * Verifies a Position message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Position message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Position
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.Position;

        /**
         * Creates a plain object from a Position message. Also converts values to other types if specified.
         * @param message Position
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.Position, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Position to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an Order. */
    interface IOrder {

        /** Order trdSide */
        trdSide: number;

        /** Order orderType */
        orderType: number;

        /** Order orderStatus */
        orderStatus: number;

        /** Order orderID */
        orderID: (number|Long);

        /** Order orderIDEx */
        orderIDEx: string;

        /** Order code */
        code: string;

        /** Order name */
        name: string;

        /** Order qty */
        qty: number;

        /** Order price */
        price?: (number|null);

        /** Order createTime */
        createTime: string;

        /** Order updateTime */
        updateTime: string;

        /** Order fillQty */
        fillQty?: (number|null);

        /** Order fillAvgPrice */
        fillAvgPrice?: (number|null);

        /** Order lastErrMsg */
        lastErrMsg?: (string|null);

        /** Order secMarket */
        secMarket?: (number|null);

        /** Order createTimestamp */
        createTimestamp?: (number|null);

        /** Order updateTimestamp */
        updateTimestamp?: (number|null);
    }

    /** Represents an Order. */
    class Order implements IOrder {

        /**
         * Constructs a new Order.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IOrder);

        /** Order trdSide. */
        public trdSide: number;

        /** Order orderType. */
        public orderType: number;

        /** Order orderStatus. */
        public orderStatus: number;

        /** Order orderID. */
        public orderID: (number|Long);

        /** Order orderIDEx. */
        public orderIDEx: string;

        /** Order code. */
        public code: string;

        /** Order name. */
        public name: string;

        /** Order qty. */
        public qty: number;

        /** Order price. */
        public price: number;

        /** Order createTime. */
        public createTime: string;

        /** Order updateTime. */
        public updateTime: string;

        /** Order fillQty. */
        public fillQty: number;

        /** Order fillAvgPrice. */
        public fillAvgPrice: number;

        /** Order lastErrMsg. */
        public lastErrMsg: string;

        /** Order secMarket. */
        public secMarket: number;

        /** Order createTimestamp. */
        public createTimestamp: number;

        /** Order updateTimestamp. */
        public updateTimestamp: number;

        /**
         * Creates a new Order instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Order instance
         */
        public static create(properties?: Trd_Common.IOrder): Trd_Common.Order;

        /**
         * Encodes the specified Order message. Does not implicitly {@link Trd_Common.Order.verify|verify} messages.
         * @param message Order message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IOrder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Order message, length delimited. Does not implicitly {@link Trd_Common.Order.verify|verify} messages.
         * @param message Order message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IOrder, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an Order message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Order
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.Order;

        /**
         * Decodes an Order message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Order
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.Order;

        /**
         * Verifies an Order message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an Order message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Order
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.Order;

        /**
         * Creates a plain object from an Order message. Also converts values to other types if specified.
         * @param message Order
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.Order, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Order to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of an OrderFill. */
    interface IOrderFill {

        /** OrderFill trdSide */
        trdSide: number;

        /** OrderFill fillID */
        fillID: (number|Long);

        /** OrderFill fillIDEx */
        fillIDEx: string;

        /** OrderFill orderID */
        orderID?: (number|Long|null);

        /** OrderFill orderIDEx */
        orderIDEx?: (string|null);

        /** OrderFill code */
        code: string;

        /** OrderFill name */
        name: string;

        /** OrderFill qty */
        qty: number;

        /** OrderFill price */
        price: number;

        /** OrderFill createTime */
        createTime: string;

        /** OrderFill counterBrokerID */
        counterBrokerID?: (number|null);

        /** OrderFill counterBrokerName */
        counterBrokerName?: (string|null);

        /** OrderFill secMarket */
        secMarket?: (number|null);

        /** OrderFill createTimestamp */
        createTimestamp?: (number|null);
    }

    /** Represents an OrderFill. */
    class OrderFill implements IOrderFill {

        /**
         * Constructs a new OrderFill.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IOrderFill);

        /** OrderFill trdSide. */
        public trdSide: number;

        /** OrderFill fillID. */
        public fillID: (number|Long);

        /** OrderFill fillIDEx. */
        public fillIDEx: string;

        /** OrderFill orderID. */
        public orderID: (number|Long);

        /** OrderFill orderIDEx. */
        public orderIDEx: string;

        /** OrderFill code. */
        public code: string;

        /** OrderFill name. */
        public name: string;

        /** OrderFill qty. */
        public qty: number;

        /** OrderFill price. */
        public price: number;

        /** OrderFill createTime. */
        public createTime: string;

        /** OrderFill counterBrokerID. */
        public counterBrokerID: number;

        /** OrderFill counterBrokerName. */
        public counterBrokerName: string;

        /** OrderFill secMarket. */
        public secMarket: number;

        /** OrderFill createTimestamp. */
        public createTimestamp: number;

        /**
         * Creates a new OrderFill instance using the specified properties.
         * @param [properties] Properties to set
         * @returns OrderFill instance
         */
        public static create(properties?: Trd_Common.IOrderFill): Trd_Common.OrderFill;

        /**
         * Encodes the specified OrderFill message. Does not implicitly {@link Trd_Common.OrderFill.verify|verify} messages.
         * @param message OrderFill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IOrderFill, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified OrderFill message, length delimited. Does not implicitly {@link Trd_Common.OrderFill.verify|verify} messages.
         * @param message OrderFill message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IOrderFill, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an OrderFill message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns OrderFill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.OrderFill;

        /**
         * Decodes an OrderFill message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns OrderFill
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.OrderFill;

        /**
         * Verifies an OrderFill message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an OrderFill message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns OrderFill
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.OrderFill;

        /**
         * Creates a plain object from an OrderFill message. Also converts values to other types if specified.
         * @param message OrderFill
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.OrderFill, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this OrderFill to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a MaxTrdQtys. */
    interface IMaxTrdQtys {

        /** MaxTrdQtys maxCashBuy */
        maxCashBuy: number;

        /** MaxTrdQtys maxCashAndMarginBuy */
        maxCashAndMarginBuy?: (number|null);

        /** MaxTrdQtys maxPositionSell */
        maxPositionSell: number;

        /** MaxTrdQtys maxSellShort */
        maxSellShort?: (number|null);

        /** MaxTrdQtys maxBuyBack */
        maxBuyBack?: (number|null);
    }

    /** Represents a MaxTrdQtys. */
    class MaxTrdQtys implements IMaxTrdQtys {

        /**
         * Constructs a new MaxTrdQtys.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.IMaxTrdQtys);

        /** MaxTrdQtys maxCashBuy. */
        public maxCashBuy: number;

        /** MaxTrdQtys maxCashAndMarginBuy. */
        public maxCashAndMarginBuy: number;

        /** MaxTrdQtys maxPositionSell. */
        public maxPositionSell: number;

        /** MaxTrdQtys maxSellShort. */
        public maxSellShort: number;

        /** MaxTrdQtys maxBuyBack. */
        public maxBuyBack: number;

        /**
         * Creates a new MaxTrdQtys instance using the specified properties.
         * @param [properties] Properties to set
         * @returns MaxTrdQtys instance
         */
        public static create(properties?: Trd_Common.IMaxTrdQtys): Trd_Common.MaxTrdQtys;

        /**
         * Encodes the specified MaxTrdQtys message. Does not implicitly {@link Trd_Common.MaxTrdQtys.verify|verify} messages.
         * @param message MaxTrdQtys message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.IMaxTrdQtys, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified MaxTrdQtys message, length delimited. Does not implicitly {@link Trd_Common.MaxTrdQtys.verify|verify} messages.
         * @param message MaxTrdQtys message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.IMaxTrdQtys, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a MaxTrdQtys message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns MaxTrdQtys
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.MaxTrdQtys;

        /**
         * Decodes a MaxTrdQtys message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns MaxTrdQtys
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.MaxTrdQtys;

        /**
         * Verifies a MaxTrdQtys message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a MaxTrdQtys message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns MaxTrdQtys
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.MaxTrdQtys;

        /**
         * Creates a plain object from a MaxTrdQtys message. Also converts values to other types if specified.
         * @param message MaxTrdQtys
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.MaxTrdQtys, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this MaxTrdQtys to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a TrdFilterConditions. */
    interface ITrdFilterConditions {

        /** TrdFilterConditions codeList */
        codeList?: (string[]|null);

        /** TrdFilterConditions idList */
        idList?: ((number|Long)[]|null);

        /** TrdFilterConditions beginTime */
        beginTime?: (string|null);

        /** TrdFilterConditions endTime */
        endTime?: (string|null);
    }

    /** Represents a TrdFilterConditions. */
    class TrdFilterConditions implements ITrdFilterConditions {

        /**
         * Constructs a new TrdFilterConditions.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Common.ITrdFilterConditions);

        /** TrdFilterConditions codeList. */
        public codeList: string[];

        /** TrdFilterConditions idList. */
        public idList: (number|Long)[];

        /** TrdFilterConditions beginTime. */
        public beginTime: string;

        /** TrdFilterConditions endTime. */
        public endTime: string;

        /**
         * Creates a new TrdFilterConditions instance using the specified properties.
         * @param [properties] Properties to set
         * @returns TrdFilterConditions instance
         */
        public static create(properties?: Trd_Common.ITrdFilterConditions): Trd_Common.TrdFilterConditions;

        /**
         * Encodes the specified TrdFilterConditions message. Does not implicitly {@link Trd_Common.TrdFilterConditions.verify|verify} messages.
         * @param message TrdFilterConditions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Common.ITrdFilterConditions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified TrdFilterConditions message, length delimited. Does not implicitly {@link Trd_Common.TrdFilterConditions.verify|verify} messages.
         * @param message TrdFilterConditions message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Common.ITrdFilterConditions, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a TrdFilterConditions message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns TrdFilterConditions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Common.TrdFilterConditions;

        /**
         * Decodes a TrdFilterConditions message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns TrdFilterConditions
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Common.TrdFilterConditions;

        /**
         * Verifies a TrdFilterConditions message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a TrdFilterConditions message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns TrdFilterConditions
         */
        public static fromObject(object: { [k: string]: any }): Trd_Common.TrdFilterConditions;

        /**
         * Creates a plain object from a TrdFilterConditions message. Also converts values to other types if specified.
         * @param message TrdFilterConditions
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Common.TrdFilterConditions, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this TrdFilterConditions to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_GetAccList. */
export namespace Trd_GetAccList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S userID */
        userID: (number|Long);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetAccList.IC2S);

        /** C2S userID. */
        public userID: (number|Long);

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetAccList.IC2S): Trd_GetAccList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetAccList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetAccList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetAccList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetAccList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetAccList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetAccList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetAccList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetAccList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C accList */
        accList?: (Trd_Common.ITrdAcc[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetAccList.IS2C);

        /** S2C accList. */
        public accList: Trd_Common.ITrdAcc[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetAccList.IS2C): Trd_GetAccList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetAccList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetAccList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetAccList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetAccList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetAccList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetAccList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetAccList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetAccList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetAccList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetAccList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetAccList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetAccList.IRequest): Trd_GetAccList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetAccList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetAccList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetAccList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetAccList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetAccList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetAccList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetAccList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetAccList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetAccList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetAccList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetAccList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetAccList.IResponse): Trd_GetAccList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetAccList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetAccList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetAccList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetAccList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetAccList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetAccList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetAccList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetAccList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_GetFunds. */
export namespace Trd_GetFunds {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetFunds.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetFunds.IC2S): Trd_GetFunds.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetFunds.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetFunds.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetFunds.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetFunds.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetFunds.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetFunds.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetFunds.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetFunds.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C funds */
        funds?: (Trd_Common.IFunds|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetFunds.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C funds. */
        public funds?: (Trd_Common.IFunds|null);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetFunds.IS2C): Trd_GetFunds.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetFunds.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetFunds.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetFunds.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetFunds.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetFunds.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetFunds.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetFunds.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetFunds.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetFunds.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetFunds.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetFunds.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetFunds.IRequest): Trd_GetFunds.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetFunds.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetFunds.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetFunds.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetFunds.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetFunds.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetFunds.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetFunds.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetFunds.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetFunds.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetFunds.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetFunds.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetFunds.IResponse): Trd_GetFunds.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetFunds.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetFunds.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetFunds.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetFunds.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetFunds.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetFunds.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetFunds.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetFunds.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_GetHistoryOrderFillList. */
export namespace Trd_GetHistoryOrderFillList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S filterConditions */
        filterConditions: Trd_Common.ITrdFilterConditions;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderFillList.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S filterConditions. */
        public filterConditions: Trd_Common.ITrdFilterConditions;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetHistoryOrderFillList.IC2S): Trd_GetHistoryOrderFillList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetHistoryOrderFillList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderFillList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderFillList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderFillList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderFillList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderFillList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderFillList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderFillList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderFillList */
        orderFillList?: (Trd_Common.IOrderFill[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderFillList.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderFillList. */
        public orderFillList: Trd_Common.IOrderFill[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetHistoryOrderFillList.IS2C): Trd_GetHistoryOrderFillList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetHistoryOrderFillList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderFillList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderFillList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderFillList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderFillList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderFillList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderFillList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderFillList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetHistoryOrderFillList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderFillList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetHistoryOrderFillList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetHistoryOrderFillList.IRequest): Trd_GetHistoryOrderFillList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetHistoryOrderFillList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderFillList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderFillList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderFillList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderFillList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderFillList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderFillList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderFillList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetHistoryOrderFillList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderFillList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetHistoryOrderFillList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetHistoryOrderFillList.IResponse): Trd_GetHistoryOrderFillList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetHistoryOrderFillList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderFillList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderFillList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderFillList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderFillList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderFillList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderFillList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderFillList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_GetHistoryOrderList. */
export namespace Trd_GetHistoryOrderList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S filterConditions */
        filterConditions: Trd_Common.ITrdFilterConditions;

        /** C2S filterStatusList */
        filterStatusList?: (number[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderList.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S filterConditions. */
        public filterConditions: Trd_Common.ITrdFilterConditions;

        /** C2S filterStatusList. */
        public filterStatusList: number[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetHistoryOrderList.IC2S): Trd_GetHistoryOrderList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetHistoryOrderList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderList */
        orderList?: (Trd_Common.IOrder[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderList.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderList. */
        public orderList: Trd_Common.IOrder[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetHistoryOrderList.IS2C): Trd_GetHistoryOrderList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetHistoryOrderList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetHistoryOrderList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetHistoryOrderList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetHistoryOrderList.IRequest): Trd_GetHistoryOrderList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetHistoryOrderList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetHistoryOrderList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetHistoryOrderList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetHistoryOrderList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetHistoryOrderList.IResponse): Trd_GetHistoryOrderList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetHistoryOrderList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetHistoryOrderList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetHistoryOrderList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetHistoryOrderList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetHistoryOrderList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetHistoryOrderList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetHistoryOrderList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetHistoryOrderList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_GetMaxTrdQtys. */
export namespace Trd_GetMaxTrdQtys {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S orderType */
        orderType: number;

        /** C2S code */
        code: string;

        /** C2S price */
        price: number;

        /** C2S orderID */
        orderID?: (number|Long|null);

        /** C2S adjustPrice */
        adjustPrice?: (boolean|null);

        /** C2S adjustSideAndLimit */
        adjustSideAndLimit?: (number|null);

        /** C2S secMarket */
        secMarket?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMaxTrdQtys.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S orderType. */
        public orderType: number;

        /** C2S code. */
        public code: string;

        /** C2S price. */
        public price: number;

        /** C2S orderID. */
        public orderID: (number|Long);

        /** C2S adjustPrice. */
        public adjustPrice: boolean;

        /** C2S adjustSideAndLimit. */
        public adjustSideAndLimit: number;

        /** C2S secMarket. */
        public secMarket: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetMaxTrdQtys.IC2S): Trd_GetMaxTrdQtys.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetMaxTrdQtys.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMaxTrdQtys.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetMaxTrdQtys.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMaxTrdQtys.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMaxTrdQtys.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMaxTrdQtys.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMaxTrdQtys.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMaxTrdQtys.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C maxTrdQtys */
        maxTrdQtys?: (Trd_Common.IMaxTrdQtys|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMaxTrdQtys.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C maxTrdQtys. */
        public maxTrdQtys?: (Trd_Common.IMaxTrdQtys|null);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetMaxTrdQtys.IS2C): Trd_GetMaxTrdQtys.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetMaxTrdQtys.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMaxTrdQtys.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetMaxTrdQtys.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMaxTrdQtys.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMaxTrdQtys.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMaxTrdQtys.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMaxTrdQtys.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMaxTrdQtys.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetMaxTrdQtys.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMaxTrdQtys.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetMaxTrdQtys.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetMaxTrdQtys.IRequest): Trd_GetMaxTrdQtys.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetMaxTrdQtys.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMaxTrdQtys.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetMaxTrdQtys.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMaxTrdQtys.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMaxTrdQtys.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMaxTrdQtys.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMaxTrdQtys.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMaxTrdQtys.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetMaxTrdQtys.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetMaxTrdQtys.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetMaxTrdQtys.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetMaxTrdQtys.IResponse): Trd_GetMaxTrdQtys.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetMaxTrdQtys.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetMaxTrdQtys.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetMaxTrdQtys.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetMaxTrdQtys.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetMaxTrdQtys.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetMaxTrdQtys.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetMaxTrdQtys.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetMaxTrdQtys.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_GetOrderFillList. */
export namespace Trd_GetOrderFillList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S filterConditions */
        filterConditions?: (Trd_Common.ITrdFilterConditions|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFillList.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S filterConditions. */
        public filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetOrderFillList.IC2S): Trd_GetOrderFillList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetOrderFillList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFillList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetOrderFillList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFillList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFillList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFillList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFillList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFillList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderFillList */
        orderFillList?: (Trd_Common.IOrderFill[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFillList.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderFillList. */
        public orderFillList: Trd_Common.IOrderFill[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetOrderFillList.IS2C): Trd_GetOrderFillList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetOrderFillList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFillList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetOrderFillList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFillList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFillList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFillList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFillList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFillList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetOrderFillList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFillList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetOrderFillList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetOrderFillList.IRequest): Trd_GetOrderFillList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetOrderFillList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFillList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetOrderFillList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFillList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFillList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFillList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFillList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFillList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetOrderFillList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderFillList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetOrderFillList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetOrderFillList.IResponse): Trd_GetOrderFillList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetOrderFillList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderFillList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetOrderFillList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderFillList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderFillList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderFillList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderFillList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderFillList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_GetOrderList. */
export namespace Trd_GetOrderList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S filterConditions */
        filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /** C2S filterStatusList */
        filterStatusList?: (number[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderList.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S filterConditions. */
        public filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /** C2S filterStatusList. */
        public filterStatusList: number[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetOrderList.IC2S): Trd_GetOrderList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetOrderList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetOrderList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderList */
        orderList?: (Trd_Common.IOrder[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderList.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderList. */
        public orderList: Trd_Common.IOrder[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetOrderList.IS2C): Trd_GetOrderList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetOrderList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetOrderList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetOrderList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetOrderList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetOrderList.IRequest): Trd_GetOrderList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetOrderList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetOrderList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetOrderList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetOrderList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetOrderList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetOrderList.IResponse): Trd_GetOrderList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetOrderList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetOrderList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetOrderList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetOrderList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetOrderList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetOrderList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetOrderList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetOrderList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_GetPositionList. */
export namespace Trd_GetPositionList {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S filterConditions */
        filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /** C2S filterPLRatioMin */
        filterPLRatioMin?: (number|null);

        /** C2S filterPLRatioMax */
        filterPLRatioMax?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetPositionList.IC2S);

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S filterConditions. */
        public filterConditions?: (Trd_Common.ITrdFilterConditions|null);

        /** C2S filterPLRatioMin. */
        public filterPLRatioMin: number;

        /** C2S filterPLRatioMax. */
        public filterPLRatioMax: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_GetPositionList.IC2S): Trd_GetPositionList.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_GetPositionList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetPositionList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_GetPositionList.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetPositionList.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetPositionList.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetPositionList.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetPositionList.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetPositionList.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C positionList */
        positionList?: (Trd_Common.IPosition[]|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetPositionList.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C positionList. */
        public positionList: Trd_Common.IPosition[];

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_GetPositionList.IS2C): Trd_GetPositionList.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_GetPositionList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetPositionList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_GetPositionList.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetPositionList.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetPositionList.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetPositionList.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetPositionList.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetPositionList.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_GetPositionList.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetPositionList.IRequest);

        /** Request c2s. */
        public c2s: Trd_GetPositionList.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_GetPositionList.IRequest): Trd_GetPositionList.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_GetPositionList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetPositionList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_GetPositionList.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetPositionList.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetPositionList.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetPositionList.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetPositionList.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetPositionList.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_GetPositionList.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_GetPositionList.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_GetPositionList.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_GetPositionList.IResponse): Trd_GetPositionList.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_GetPositionList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_GetPositionList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_GetPositionList.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_GetPositionList.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_GetPositionList.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_GetPositionList.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_GetPositionList.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_GetPositionList.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_ModifyOrder. */
export namespace Trd_ModifyOrder {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S packetID */
        packetID: Common.IPacketID;

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S orderID */
        orderID: (number|Long);

        /** C2S modifyOrderOp */
        modifyOrderOp: number;

        /** C2S forAll */
        forAll?: (boolean|null);

        /** C2S qty */
        qty?: (number|null);

        /** C2S price */
        price?: (number|null);

        /** C2S adjustPrice */
        adjustPrice?: (boolean|null);

        /** C2S adjustSideAndLimit */
        adjustSideAndLimit?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ModifyOrder.IC2S);

        /** C2S packetID. */
        public packetID: Common.IPacketID;

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S orderID. */
        public orderID: (number|Long);

        /** C2S modifyOrderOp. */
        public modifyOrderOp: number;

        /** C2S forAll. */
        public forAll: boolean;

        /** C2S qty. */
        public qty: number;

        /** C2S price. */
        public price: number;

        /** C2S adjustPrice. */
        public adjustPrice: boolean;

        /** C2S adjustSideAndLimit. */
        public adjustSideAndLimit: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_ModifyOrder.IC2S): Trd_ModifyOrder.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_ModifyOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ModifyOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_ModifyOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ModifyOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ModifyOrder.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ModifyOrder.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_ModifyOrder.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ModifyOrder.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderID */
        orderID: (number|Long);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ModifyOrder.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderID. */
        public orderID: (number|Long);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_ModifyOrder.IS2C): Trd_ModifyOrder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_ModifyOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ModifyOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_ModifyOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ModifyOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ModifyOrder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ModifyOrder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_ModifyOrder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ModifyOrder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_ModifyOrder.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ModifyOrder.IRequest);

        /** Request c2s. */
        public c2s: Trd_ModifyOrder.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_ModifyOrder.IRequest): Trd_ModifyOrder.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_ModifyOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ModifyOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_ModifyOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ModifyOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ModifyOrder.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ModifyOrder.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_ModifyOrder.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ModifyOrder.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_ModifyOrder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ModifyOrder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_ModifyOrder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_ModifyOrder.IResponse): Trd_ModifyOrder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_ModifyOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ModifyOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_ModifyOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ModifyOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ModifyOrder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ModifyOrder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_ModifyOrder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ModifyOrder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_Notify. */
export namespace Trd_Notify {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C type */
        type: number;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Notify.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C type. */
        public type: number;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_Notify.IS2C): Trd_Notify.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_Notify.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Notify.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_Notify.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Notify.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Notify.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Notify.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_Notify.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Notify.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_Notify.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_Notify.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_Notify.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_Notify.IResponse): Trd_Notify.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_Notify.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_Notify.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_Notify.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_Notify.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_Notify.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_Notify.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_Notify.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_Notify.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_PlaceOrder. */
export namespace Trd_PlaceOrder {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S packetID */
        packetID: Common.IPacketID;

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S trdSide */
        trdSide: number;

        /** C2S orderType */
        orderType: number;

        /** C2S code */
        code: string;

        /** C2S qty */
        qty: number;

        /** C2S price */
        price?: (number|null);

        /** C2S adjustPrice */
        adjustPrice?: (boolean|null);

        /** C2S adjustSideAndLimit */
        adjustSideAndLimit?: (number|null);

        /** C2S secMarket */
        secMarket?: (number|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_PlaceOrder.IC2S);

        /** C2S packetID. */
        public packetID: Common.IPacketID;

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S trdSide. */
        public trdSide: number;

        /** C2S orderType. */
        public orderType: number;

        /** C2S code. */
        public code: string;

        /** C2S qty. */
        public qty: number;

        /** C2S price. */
        public price: number;

        /** C2S adjustPrice. */
        public adjustPrice: boolean;

        /** C2S adjustSideAndLimit. */
        public adjustSideAndLimit: number;

        /** C2S secMarket. */
        public secMarket: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_PlaceOrder.IC2S): Trd_PlaceOrder.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_PlaceOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_PlaceOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_PlaceOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_PlaceOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_PlaceOrder.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_PlaceOrder.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_PlaceOrder.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_PlaceOrder.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderID */
        orderID?: (number|Long|null);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_PlaceOrder.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderID. */
        public orderID: (number|Long);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_PlaceOrder.IS2C): Trd_PlaceOrder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_PlaceOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_PlaceOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_PlaceOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_PlaceOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_PlaceOrder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_PlaceOrder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_PlaceOrder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_PlaceOrder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_PlaceOrder.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_PlaceOrder.IRequest);

        /** Request c2s. */
        public c2s: Trd_PlaceOrder.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_PlaceOrder.IRequest): Trd_PlaceOrder.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_PlaceOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_PlaceOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_PlaceOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_PlaceOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_PlaceOrder.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_PlaceOrder.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_PlaceOrder.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_PlaceOrder.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_PlaceOrder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_PlaceOrder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_PlaceOrder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_PlaceOrder.IResponse): Trd_PlaceOrder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_PlaceOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_PlaceOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_PlaceOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_PlaceOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_PlaceOrder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_PlaceOrder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_PlaceOrder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_PlaceOrder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_ReconfirmOrder. */
export namespace Trd_ReconfirmOrder {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S packetID */
        packetID: Common.IPacketID;

        /** C2S header */
        header: Trd_Common.ITrdHeader;

        /** C2S orderID */
        orderID: (number|Long);

        /** C2S reconfirmReason */
        reconfirmReason: number;
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ReconfirmOrder.IC2S);

        /** C2S packetID. */
        public packetID: Common.IPacketID;

        /** C2S header. */
        public header: Trd_Common.ITrdHeader;

        /** C2S orderID. */
        public orderID: (number|Long);

        /** C2S reconfirmReason. */
        public reconfirmReason: number;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_ReconfirmOrder.IC2S): Trd_ReconfirmOrder.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_ReconfirmOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ReconfirmOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_ReconfirmOrder.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ReconfirmOrder.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ReconfirmOrder.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ReconfirmOrder.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_ReconfirmOrder.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ReconfirmOrder.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderID */
        orderID: (number|Long);
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ReconfirmOrder.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderID. */
        public orderID: (number|Long);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_ReconfirmOrder.IS2C): Trd_ReconfirmOrder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_ReconfirmOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ReconfirmOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_ReconfirmOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ReconfirmOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ReconfirmOrder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ReconfirmOrder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_ReconfirmOrder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ReconfirmOrder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_ReconfirmOrder.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ReconfirmOrder.IRequest);

        /** Request c2s. */
        public c2s: Trd_ReconfirmOrder.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_ReconfirmOrder.IRequest): Trd_ReconfirmOrder.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_ReconfirmOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ReconfirmOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_ReconfirmOrder.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ReconfirmOrder.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ReconfirmOrder.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ReconfirmOrder.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_ReconfirmOrder.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ReconfirmOrder.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_ReconfirmOrder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_ReconfirmOrder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_ReconfirmOrder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_ReconfirmOrder.IResponse): Trd_ReconfirmOrder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_ReconfirmOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_ReconfirmOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_ReconfirmOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_ReconfirmOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_ReconfirmOrder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_ReconfirmOrder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_ReconfirmOrder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_ReconfirmOrder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_SubAccPush. */
export namespace Trd_SubAccPush {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S accIDList */
        accIDList?: ((number|Long)[]|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_SubAccPush.IC2S);

        /** C2S accIDList. */
        public accIDList: (number|Long)[];

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_SubAccPush.IC2S): Trd_SubAccPush.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_SubAccPush.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_SubAccPush.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_SubAccPush.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_SubAccPush.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_SubAccPush.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_SubAccPush.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_SubAccPush.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_SubAccPush.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_SubAccPush.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_SubAccPush.IS2C): Trd_SubAccPush.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_SubAccPush.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_SubAccPush.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_SubAccPush.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_SubAccPush.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_SubAccPush.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_SubAccPush.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_SubAccPush.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_SubAccPush.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_SubAccPush.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_SubAccPush.IRequest);

        /** Request c2s. */
        public c2s: Trd_SubAccPush.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_SubAccPush.IRequest): Trd_SubAccPush.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_SubAccPush.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_SubAccPush.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_SubAccPush.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_SubAccPush.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_SubAccPush.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_SubAccPush.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_SubAccPush.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_SubAccPush.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_SubAccPush.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_SubAccPush.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_SubAccPush.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_SubAccPush.IResponse): Trd_SubAccPush.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_SubAccPush.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_SubAccPush.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_SubAccPush.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_SubAccPush.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_SubAccPush.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_SubAccPush.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_SubAccPush.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_SubAccPush.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_UnlockTrade. */
export namespace Trd_UnlockTrade {

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S unlock */
        unlock: boolean;

        /** C2S pwdMD5 */
        pwdMD5?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UnlockTrade.IC2S);

        /** C2S unlock. */
        public unlock: boolean;

        /** C2S pwdMD5. */
        public pwdMD5: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Trd_UnlockTrade.IC2S): Trd_UnlockTrade.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Trd_UnlockTrade.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UnlockTrade.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Trd_UnlockTrade.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UnlockTrade.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UnlockTrade.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UnlockTrade.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Trd_UnlockTrade.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UnlockTrade.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UnlockTrade.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_UnlockTrade.IS2C): Trd_UnlockTrade.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_UnlockTrade.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UnlockTrade.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_UnlockTrade.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UnlockTrade.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UnlockTrade.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UnlockTrade.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_UnlockTrade.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UnlockTrade.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Trd_UnlockTrade.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UnlockTrade.IRequest);

        /** Request c2s. */
        public c2s: Trd_UnlockTrade.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Trd_UnlockTrade.IRequest): Trd_UnlockTrade.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Trd_UnlockTrade.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UnlockTrade.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Trd_UnlockTrade.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UnlockTrade.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UnlockTrade.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UnlockTrade.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Trd_UnlockTrade.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UnlockTrade.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_UnlockTrade.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UnlockTrade.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_UnlockTrade.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_UnlockTrade.IResponse): Trd_UnlockTrade.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_UnlockTrade.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UnlockTrade.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_UnlockTrade.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UnlockTrade.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UnlockTrade.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UnlockTrade.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_UnlockTrade.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UnlockTrade.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_UpdateOrder. */
export namespace Trd_UpdateOrder {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C order */
        order: Trd_Common.IOrder;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UpdateOrder.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C order. */
        public order: Trd_Common.IOrder;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_UpdateOrder.IS2C): Trd_UpdateOrder.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_UpdateOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UpdateOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_UpdateOrder.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UpdateOrder.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UpdateOrder.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UpdateOrder.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_UpdateOrder.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UpdateOrder.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_UpdateOrder.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UpdateOrder.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_UpdateOrder.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_UpdateOrder.IResponse): Trd_UpdateOrder.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_UpdateOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UpdateOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_UpdateOrder.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UpdateOrder.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UpdateOrder.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UpdateOrder.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_UpdateOrder.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UpdateOrder.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Trd_UpdateOrderFill. */
export namespace Trd_UpdateOrderFill {

    /** Properties of a S2C. */
    interface IS2C {

        /** S2C header */
        header: Trd_Common.ITrdHeader;

        /** S2C orderFill */
        orderFill: Trd_Common.IOrderFill;
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UpdateOrderFill.IS2C);

        /** S2C header. */
        public header: Trd_Common.ITrdHeader;

        /** S2C orderFill. */
        public orderFill: Trd_Common.IOrderFill;

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Trd_UpdateOrderFill.IS2C): Trd_UpdateOrderFill.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Trd_UpdateOrderFill.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UpdateOrderFill.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Trd_UpdateOrderFill.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UpdateOrderFill.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UpdateOrderFill.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UpdateOrderFill.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Trd_UpdateOrderFill.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UpdateOrderFill.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Trd_UpdateOrderFill.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Trd_UpdateOrderFill.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Trd_UpdateOrderFill.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Trd_UpdateOrderFill.IResponse): Trd_UpdateOrderFill.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Trd_UpdateOrderFill.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Trd_UpdateOrderFill.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Trd_UpdateOrderFill.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Trd_UpdateOrderFill.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Trd_UpdateOrderFill.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Trd_UpdateOrderFill.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Trd_UpdateOrderFill.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Trd_UpdateOrderFill.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}

/** Namespace Verification. */
export namespace Verification {

    /** VerificationType enum. */
    enum VerificationType {
        VerificationType_Unknow = 0,
        VerificationType_Picture = 1,
        VerificationType_Phone = 2
    }

    /** VerificationOp enum. */
    enum VerificationOp {
        VerificationOp_Unknow = 0,
        VerificationOp_Request = 1,
        VerificationOp_InputAndLogin = 2
    }

    /** Properties of a C2S. */
    interface IC2S {

        /** C2S type */
        type: number;

        /** C2S op */
        op: number;

        /** C2S code */
        code?: (string|null);
    }

    /** Represents a C2S. */
    class C2S implements IC2S {

        /**
         * Constructs a new C2S.
         * @param [properties] Properties to set
         */
        constructor(properties?: Verification.IC2S);

        /** C2S type. */
        public type: number;

        /** C2S op. */
        public op: number;

        /** C2S code. */
        public code: string;

        /**
         * Creates a new C2S instance using the specified properties.
         * @param [properties] Properties to set
         * @returns C2S instance
         */
        public static create(properties?: Verification.IC2S): Verification.C2S;

        /**
         * Encodes the specified C2S message. Does not implicitly {@link Verification.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Verification.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified C2S message, length delimited. Does not implicitly {@link Verification.C2S.verify|verify} messages.
         * @param message C2S message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Verification.IC2S, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a C2S message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Verification.C2S;

        /**
         * Decodes a C2S message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns C2S
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Verification.C2S;

        /**
         * Verifies a C2S message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a C2S message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns C2S
         */
        public static fromObject(object: { [k: string]: any }): Verification.C2S;

        /**
         * Creates a plain object from a C2S message. Also converts values to other types if specified.
         * @param message C2S
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Verification.C2S, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this C2S to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a S2C. */
    interface IS2C {
    }

    /** Represents a S2C. */
    class S2C implements IS2C {

        /**
         * Constructs a new S2C.
         * @param [properties] Properties to set
         */
        constructor(properties?: Verification.IS2C);

        /**
         * Creates a new S2C instance using the specified properties.
         * @param [properties] Properties to set
         * @returns S2C instance
         */
        public static create(properties?: Verification.IS2C): Verification.S2C;

        /**
         * Encodes the specified S2C message. Does not implicitly {@link Verification.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Verification.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified S2C message, length delimited. Does not implicitly {@link Verification.S2C.verify|verify} messages.
         * @param message S2C message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Verification.IS2C, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a S2C message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Verification.S2C;

        /**
         * Decodes a S2C message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns S2C
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Verification.S2C;

        /**
         * Verifies a S2C message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a S2C message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns S2C
         */
        public static fromObject(object: { [k: string]: any }): Verification.S2C;

        /**
         * Creates a plain object from a S2C message. Also converts values to other types if specified.
         * @param message S2C
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Verification.S2C, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this S2C to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Request. */
    interface IRequest {

        /** Request c2s */
        c2s: Verification.IC2S;
    }

    /** Represents a Request. */
    class Request implements IRequest {

        /**
         * Constructs a new Request.
         * @param [properties] Properties to set
         */
        constructor(properties?: Verification.IRequest);

        /** Request c2s. */
        public c2s: Verification.IC2S;

        /**
         * Creates a new Request instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Request instance
         */
        public static create(properties?: Verification.IRequest): Verification.Request;

        /**
         * Encodes the specified Request message. Does not implicitly {@link Verification.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Verification.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Request message, length delimited. Does not implicitly {@link Verification.Request.verify|verify} messages.
         * @param message Request message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Verification.IRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Request message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Verification.Request;

        /**
         * Decodes a Request message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Request
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Verification.Request;

        /**
         * Verifies a Request message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Request message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Request
         */
        public static fromObject(object: { [k: string]: any }): Verification.Request;

        /**
         * Creates a plain object from a Request message. Also converts values to other types if specified.
         * @param message Request
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Verification.Request, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Request to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }

    /** Properties of a Response. */
    interface IResponse {

        /** Response retType */
        retType: number;

        /** Response retMsg */
        retMsg?: (string|null);

        /** Response errCode */
        errCode?: (number|null);

        /** Response s2c */
        s2c?: (Verification.IS2C|null);
    }

    /** Represents a Response. */
    class Response implements IResponse {

        /**
         * Constructs a new Response.
         * @param [properties] Properties to set
         */
        constructor(properties?: Verification.IResponse);

        /** Response retType. */
        public retType: number;

        /** Response retMsg. */
        public retMsg: string;

        /** Response errCode. */
        public errCode: number;

        /** Response s2c. */
        public s2c?: (Verification.IS2C|null);

        /**
         * Creates a new Response instance using the specified properties.
         * @param [properties] Properties to set
         * @returns Response instance
         */
        public static create(properties?: Verification.IResponse): Verification.Response;

        /**
         * Encodes the specified Response message. Does not implicitly {@link Verification.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: Verification.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified Response message, length delimited. Does not implicitly {@link Verification.Response.verify|verify} messages.
         * @param message Response message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: Verification.IResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a Response message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Verification.Response;

        /**
         * Decodes a Response message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns Response
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Verification.Response;

        /**
         * Verifies a Response message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a Response message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns Response
         */
        public static fromObject(object: { [k: string]: any }): Verification.Response;

        /**
         * Creates a plain object from a Response message. Also converts values to other types if specified.
         * @param message Response
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: Verification.Response, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this Response to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };
    }
}
